6047-1e99e44401ec55f6.js:1 Replit version a74b4a10, pid2 version 0.0.1389
_app-71fec6d0aab5f2b3.js:38 
      /////////////////////
   ///////////////////////////
  ////////@@@@@@@//////////////
  ////////@@@@@@@//////////////
  ////////@@@@@@@//////////////        Curious and driven?
  ///////////////@@@@@@@///////        Work with us!
  ///////////////@@@@@@@///////
  ///////////////@@@@@@@///////        https://join.replit.com/hack.with.us
  ////////@@@@@@@//////////////
  ////////@@@@@@@//////////////
  ////////@@@@@@#//////////////
   ///////////////////////////
      /////////////////////
      
_app-71fec6d0aab5f2b3.js:38 [LaunchDarkly] LaunchDarkly client initialized
RwaDealTracker:1 Banner not shown: beforeinstallpromptevent.preventDefault() called. The page must call beforeinstallpromptevent.prompt() to show the banner.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
Error while parsing the 'sandbox' attribute: 'allow-downloads-without-user-activation' is an invalid sandbox flag.
framework-0a951431cf99f499.js:1 Unrecognized feature: 'ambient-light-sensor'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'battery'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'execution-while-not-rendered'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'execution-while-out-of-viewport'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'layout-animations'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'legacy-image-formats'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'navigation-override'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'oversized-images'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'publickey-credentials'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'speaker-selection'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'unoptimized-images'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'unsized-media'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Unrecognized feature: 'pointer-lock'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Allow attribute will take precedence over 'allowfullscreen'.
_ @ framework-0a951431cf99f499.js:1
framework-0a951431cf99f499.js:1 Allow attribute will take precedence over 'allowpaymentrequest'.
_ @ framework-0a951431cf99f499.js:1
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 An aria-label or aria-labelledby prop is required for accessibility.
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
stallwart.build.js:1 stallwart: failed ping 1
stallwart.build.js:1 stallwart: failed ping 2
stallwart.build.js:1 stallwart: failed ping 3
stallwart.build.js:1 stallwart: failed ping 4
stallwart.build.js:1 stallwart: failed ping 5
stallwart.build.js:1 stallwart: session stalled
_app-71fec6d0aab5f2b3.js:38 onClick is deprecated, please use onPress
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 cursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45290)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 removeCursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45394)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileSavedChanged listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45508)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46777)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fsError listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46963)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 transparentReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:47825)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 changes listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:49757)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 cursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45290)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 removeCursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45394)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileSavedChanged listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45508)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46777)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fsError listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46963)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 transparentReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:47825)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 changes listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:49757)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 cursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45290)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 removeCursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45394)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileSavedChanged listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45508)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46777)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fsError listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46963)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 transparentReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:47825)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 changes listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:49757)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 cursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45290)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 removeCursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45394)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileSavedChanged listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45508)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46777)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fsError listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46963)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 transparentReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:47825)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 changes listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:49757)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitComplete listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44835)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileDirty listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:44955)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileClean listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45070)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 commitStart listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45187)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 promptUserReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46480)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 cursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45290)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 removeCursor listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45394)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fileSavedChanged listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:45508)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 error listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46777)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 fsError listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:46963)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 transparentReconnect listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:47825)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
_app-71fec6d0aab5f2b3.js:38 MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 changes listeners added. Use emitter.setMaxListeners() to increase limit
    at d (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:58325)
    at c.addListener (https://cdn.replit.com/_next/static/chunks/4899-8e7733b8e62868f0.js:1:60859)
    at h (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:49757)
    at Object.watchTextFile (https://cdn.replit.com/_next/static/chunks/692-2e41ba5e44135dba.js:1:50705)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281273
    at Array.map (<anonymous>)
    at https://cdn.replit.com/_next/static/chunks/307-a7d26d375a3fba8b.js:1:2281248
    at oO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:125395)
    at uB (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:154390)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152776
    at uO (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:152842)
    at u_ (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:137506)
    at r6 (https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:86196)
    at https://cdn.replit.com/_next/static/chunks/framework-0a951431cf99f499.js:1:134884
(anonymous) @ _app-71fec6d0aab5f2b3.js:38
3329-6b4ccaeab66e6c98.js:1 Uncaught (in promise) Error: cannot get a bound send function on a closed transport
    at s.getSessionBoundSendFn (3329-6b4ccaeab66e6c98.js:1:165454)
    at em (3329-6b4ccaeab66e6c98.js:1:43560)
    at 3329-6b4ccaeab66e6c98.js:1:43404
    at Object.apply (3329-6b4ccaeab66e6c98.js:1:42869)
    at 307-a7d26d375a3fba8b.js:1:2235146
    at Object.next (main-cdafa2d4498aed05.js:1:174131)
    at n (main-cdafa2d4498aed05.js:1:57526)
    at u (main-cdafa2d4498aed05.js:1:57723)
    at main-cdafa2d4498aed05.js:1:57782
    at new Promise (<anonymous>)
    at main-cdafa2d4498aed05.js:1:57664
    at 307-a7d26d375a3fba8b.js:1:2236201
    at 307-a7d26d375a3fba8b.js:1:2268528
    at Object.next (main-cdafa2d4498aed05.js:1:174131)
    at n (main-cdafa2d4498aed05.js:1:57526)
    at u (main-cdafa2d4498aed05.js:1:57723)
getSessionBoundSendFn @ 3329-6b4ccaeab66e6c98.js:1
em @ 3329-6b4ccaeab66e6c98.js:1
(anonymous) @ 3329-6b4ccaeab66e6c98.js:1
apply @ 3329-6b4ccaeab66e6c98.js:1
(anonymous) @ 307-a7d26d375a3fba8b.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
n @ main-cdafa2d4498aed05.js:1
u @ main-cdafa2d4498aed05.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
(anonymous) @ 307-a7d26d375a3fba8b.js:1
(anonymous) @ 307-a7d26d375a3fba8b.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
n @ main-cdafa2d4498aed05.js:1
u @ main-cdafa2d4498aed05.js:1
3329-6b4ccaeab66e6c98.js:1 Uncaught (in promise) Error: cannot get a bound send function on a closed transport
    at s.getSessionBoundSendFn (3329-6b4ccaeab66e6c98.js:1:165454)
    at em (3329-6b4ccaeab66e6c98.js:1:43560)
    at 3329-6b4ccaeab66e6c98.js:1:43404
    at Object.apply (3329-6b4ccaeab66e6c98.js:1:42869)
    at 307-a7d26d375a3fba8b.js:1:2235146
    at Object.next (main-cdafa2d4498aed05.js:1:174131)
    at n (main-cdafa2d4498aed05.js:1:57526)
    at u (main-cdafa2d4498aed05.js:1:57723)
    at main-cdafa2d4498aed05.js:1:57782
    at new Promise (<anonymous>)
    at main-cdafa2d4498aed05.js:1:57664
    at 307-a7d26d375a3fba8b.js:1:2236201
    at 307-a7d26d375a3fba8b.js:1:2268528
    at Object.next (main-cdafa2d4498aed05.js:1:174131)
    at n (main-cdafa2d4498aed05.js:1:57526)
    at u (main-cdafa2d4498aed05.js:1:57723)
getSessionBoundSendFn @ 3329-6b4ccaeab66e6c98.js:1
em @ 3329-6b4ccaeab66e6c98.js:1
(anonymous) @ 3329-6b4ccaeab66e6c98.js:1
apply @ 3329-6b4ccaeab66e6c98.js:1
(anonymous) @ 307-a7d26d375a3fba8b.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
n @ main-cdafa2d4498aed05.js:1
u @ main-cdafa2d4498aed05.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
(anonymous) @ 307-a7d26d375a3fba8b.js:1
(anonymous) @ 307-a7d26d375a3fba8b.js:1
(anonymous) @ main-cdafa2d4498aed05.js:1
n @ main-cdafa2d4498aed05.js:1
u @ main-cdafa2d4498aed05.js:1
/~:1 Blocked aria-hidden on an element because its descendant retained focus. The focus must not be hidden from assistive technology users. Avoid using aria-hidden on a focused element or its ancestor. Consider using the inert attribute instead, which will also prevent focus. For more details, see the aria-hidden section of the WAI-ARIA specification at https://w3c.github.io/aria/#aria-hidden.
Element with focus: <div.cm-content cm-lineWrapping>
Ancestor with aria-hidden: <div. useView_view__C2mnv css-17qdd0f Surface_surfaceRoot__TeA2u> null
workspace_iframe.html:32 Unrecognized feature: 'ambient-light-sensor'.
workspace_iframe.html:32 Unrecognized feature: 'battery'.
workspace_iframe.html:32 Unrecognized feature: 'execution-while-not-rendered'.
workspace_iframe.html:32 Unrecognized feature: 'execution-while-out-of-viewport'.
workspace_iframe.html:32 Unrecognized feature: 'layout-animations'.
workspace_iframe.html:32 Unrecognized feature: 'legacy-image-formats'.
workspace_iframe.html:32 Unrecognized feature: 'navigation-override'.
workspace_iframe.html:32 Unrecognized feature: 'oversized-images'.
workspace_iframe.html:32 Unrecognized feature: 'publickey-credentials'.
workspace_iframe.html:32 Unrecognized feature: 'speaker-selection'.
workspace_iframe.html:32 Unrecognized feature: 'unoptimized-images'.
workspace_iframe.html:32 Unrecognized feature: 'unsized-media'.
workspace_iframe.html:32 Allow attribute will take precedence over 'allowfullscreen'.
workspace_iframe.html:32 Allow attribute will take precedence over 'allowpaymentrequest'.
eruda.js:2 WebSocket connection to 'wss://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/?token=PlrL9fQsV8Mx' failed: 
t @ Network.js:227
setupWebSocket @ client:536
(anonymous) @ client:531
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [1m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1m] Preparing chart data with 1000 candles
eruda.js:2 [1m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 3 patterns for 1m timeframe
eruda.js:2 ⚡ Successfully calculated 1m: SHORT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 [UltimateManager] Fallback price synchronized: BTC/USDT = $109781.59767570333
eruda.js:2 [SignalDashboard] Immediate calculation triggered by UltimateManager
eruda.js:2 🛑 Calculation blocked: 240s until next 4-minute interval
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (5m)
eruda.js:2 [5m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [5m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [5m] Preparing chart data with 1000 candles
eruda.js:2 [5m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [5m] Consolidated signal result: SHORT (80%)
eruda.js:2 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=SHORT, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 5m: Signal ready - Direction=SHORT, Confidence=80%
eruda.js:2 Generated 3 patterns for 5m timeframe
eruda.js:2 ⚡ Successfully calculated 5m: SHORT
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (15m)
eruda.js:2 [15m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [15m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [15m] Preparing chart data with 800 candles
eruda.js:2 [15m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [15m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 15m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 5 patterns for 15m timeframe
eruda.js:2 ⚡ Successfully calculated 15m: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: ETH/USDT = $2765.7988538790023
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (30m)
eruda.js:2 [30m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [30m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [30m] Preparing chart data with 800 candles
eruda.js:2 [30m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [30m] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 30m: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 3 patterns for 30m timeframe
eruda.js:2 ⚡ Successfully calculated 30m: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: BNB/USDT = $670.8844111935614
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1h)
eruda.js:2 [1h] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1h] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1h] Preparing chart data with 720 candles
eruda.js:2 [1h] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1h] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1h: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 8 patterns for 1h timeframe
eruda.js:2 ⚡ Successfully calculated 1h: SHORT
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (4h)
eruda.js:2 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.2967148747448625
eruda.js:2 [4h] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [4h] Using live price: 109781.59767570333 for calculation
eruda.js:2 [4h] Preparing chart data with 500 candles
eruda.js:2 [4h] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [4h] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 4h: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 6 patterns for 4h timeframe
eruda.js:2 ⚡ Successfully calculated 4h: LONG
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1d)
eruda.js:2 [1d] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1d] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1d] Preparing chart data with 365 candles
eruda.js:2 [1d] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1d] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1d: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 7 patterns for 1d timeframe
eruda.js:2 ⚡ Successfully calculated 1d: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.82090487208907
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (3d)
eruda.js:2 [3d] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [3d] Using live price: 109781.59767570333 for calculation
eruda.js:2 [3d] Preparing chart data with 150 candles
eruda.js:2 [3d] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [3d] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 6 patterns for 3d timeframe
eruda.js:2 ⚡ Successfully calculated 3d: LONG
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1w)
eruda.js:2 [1w] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1w] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1w] Preparing chart data with 200 candles
eruda.js:2 [1w] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1w] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 1w: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 6 patterns for 1w timeframe
eruda.js:2 ⚡ Successfully calculated 1w: LONG
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1M)
eruda.js:2 [UltimateManager] Fallback price synchronized: USDC/USD = $0.9998236753110439
eruda.js:2 [1M] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1M] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1M] Preparing chart data with 60 candles
eruda.js:2 [1M] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1M] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1M: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 5 patterns for 1M timeframe
eruda.js:2 ⚡ Successfully calculated 1M: SHORT
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: Array(10)
eruda.js:2 🔧 Aligned signals after processing: Array(10)
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: Array(10)
eruda.js:2 📊 About to call setSignals with: Array(10)
eruda.js:2 📊 Sample signal structure: Array(18)
eruda.js:2 📊 Sample 1d signal: Object
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 1m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 5m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 5m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 15m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 15m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 30m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 30m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1h SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 1h SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 4h LONG @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 104292.52, Take Profit: 120759.76
eruda.js:2 Recorded prediction: 4h LONG @ 109781.59767570333
eruda.js:2 🔄 Signals updated, syncing timer with actual calculation time
eruda.js:2 📈 Prediction recorded: BTC/USDT 1d SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 116368.49, Take Profit: 96607.81
eruda.js:2 Recorded prediction: 1d SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 3d LONG @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 100999.07, Take Profit: 127346.65
eruda.js:2 Recorded prediction: 3d LONG @ 109781.59767570333
eruda.js:2 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7070124703649437
eruda.js:2 📈 Prediction recorded: BTC/USDT 1w LONG @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 98803.44, Take Profit: 131737.92
eruda.js:2 Recorded prediction: 1w LONG @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1M SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 126248.84, Take Profit: 76847.12
eruda.js:2 Recorded prediction: 1M SHORT @ 109781.59767570333
eruda.js:2 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.134754949974155
eruda.js:2 Found 10 valid signals for recommendation for BTC/USDT
eruda.js:2 Updating trade recommendation for 4h timeframe
eruda.js:2 No signal available for BTC/USDT on 4h
eruda.js:2 Calculation process complete for BTC/USDT - 10 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT but calculation blocked by 4-minute timer (237s remaining)
eruda.js:2 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.19441680294511218
eruda.js:2 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29056238621809494
eruda.js:2 [UltimateManager] Fallback price synchronized: TON/USDT = $3.3005691303969806
eruda.js:2 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.200104861680177
eruda.js:2 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
eruda.js:2 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.000013195098989737868
eruda.js:2 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.35538267263068
eruda.js:2 [UltimateManager] Fallback price synchronized: BCH/USDT = $440.3502990889886
eruda.js:2 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.313364507516395
eruda.js:2 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.251712337923111
eruda.js:2 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.2798962148825649
eruda.js:2 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.5933264529376565
eruda.js:2 [UltimateManager] Fallback price synchronized: XMR/USDT = $338.5806196908923
eruda.js:2 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.320885414177827
eruda.js:2 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.18006356952775826
eruda.js:2 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.707843046348722
eruda.js:2 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.088173465173222
eruda.js:2 [UltimateManager] Fallback price synchronized: VET/USDT = $0.02580531763051911
eruda.js:2 [UltimateManager] Fallback price synchronized: APT/USDT = $5.07206414949992
eruda.js:2 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.6151949802512253
eruda.js:2 [UltimateManager] Fallback price synchronized: AAVE/USDT = $307.0670293694883
eruda.js:2 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.4018845226268834
eruda.js:2 [UltimateManager] Fallback price synchronized: OP/USDT = $0.7017026554727508
eruda.js:2 [UltimateManager] Fallback price synchronized: MKR/USDT = $2104.423432417125
eruda.js:2 [UltimateManager] Fallback price synchronized: GRT/USDT = $0.10067354613950595
eruda.js:2 [UltimateManager] Fallback price synchronized: STX/USDT = $0.7064113704127948
eruda.js:2 [UltimateManager] Fallback price synchronized: INJ/USDT = $13.8625628681819
eruda.js:2 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.20541443596700884
eruda.js:2 [UltimateManager] Fallback price synchronized: LDO/USDT = $0.9475662888923031
eruda.js:2 [UltimateManager] Fallback price synchronized: THETA/USDT = $0.8155278884651826
eruda.js:2 [UltimateManager] Fallback price synchronized: SUI/USDT = $3.4553348138152997
eruda.js:2 [UltimateManager] Fallback price synchronized: RUNE/USDT = $1.7422645839345205
eruda.js:2 [UltimateManager] Fallback price synchronized: MANA/USDT = $0.29978921971452427
eruda.js:2 [UltimateManager] Fallback price synchronized: SAND/USDT = $0.2970252353275401
eruda.js:2 [UltimateManager] Fallback price synchronized: FET/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
eruda.js:2 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
eruda.js:2 [UltimateManager] Multi-pair fetch: 50 symbols updated
eruda.js:2 [UltimateManager] Preloading chart data for immediate analysis
eruda.js:2 Loading chart with 1000 data points for BTC/USDT (1m)
eruda.js:2 Loading chart with 1000 data points for BTC/USDT (5m)
eruda.js:2 Loading chart with 800 data points for BTC/USDT (15m)
eruda.js:2 Loading chart with 800 data points for BTC/USDT (30m)
eruda.js:2 Loading chart with 720 data points for BTC/USDT (1h)
eruda.js:2 Loading chart with 500 data points for BTC/USDT (4h)
eruda.js:2 Loading chart with 365 data points for BTC/USDT (1d)
eruda.js:2 Loading chart with 150 data points for BTC/USDT (3d)
eruda.js:2 Loading chart with 200 data points for BTC/USDT (1w)
eruda.js:2 Loading chart with 60 data points for BTC/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for ETH/USDT (1m)
eruda.js:2 Loading chart with 500 data points for ETH/USDT (4h)
eruda.js:2 Loading chart with 365 data points for ETH/USDT (1d)
eruda.js:2 Loading chart with 800 data points for ETH/USDT (15m)
eruda.js:2 Loading chart with 800 data points for ETH/USDT (30m)
eruda.js:2 Loading chart with 1000 data points for ETH/USDT (5m)
eruda.js:2 Loading chart with 720 data points for ETH/USDT (1h)
eruda.js:2 Loading chart with 150 data points for ETH/USDT (3d)
eruda.js:2 Loading chart with 200 data points for ETH/USDT (1w)
eruda.js:2 Loading chart with 60 data points for ETH/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for BNB/USDT (1m)
eruda.js:2 Loading chart with 720 data points for BNB/USDT (1h)
eruda.js:2 Loading chart with 1000 data points for BNB/USDT (5m)
eruda.js:2 Loading chart with 800 data points for BNB/USDT (15m)
eruda.js:2 Loading chart with 800 data points for BNB/USDT (30m)
eruda.js:2 Loading chart with 500 data points for BNB/USDT (4h)
eruda.js:2 Loading chart with 365 data points for BNB/USDT (1d)
eruda.js:2 Loading chart with 150 data points for BNB/USDT (3d)
eruda.js:2 Loading chart with 200 data points for BNB/USDT (1w)
eruda.js:2 Loading chart with 60 data points for BNB/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for SOL/USDT (5m)
eruda.js:2 Loading chart with 800 data points for SOL/USDT (15m)
eruda.js:2 Loading chart with 1000 data points for SOL/USDT (1m)
eruda.js:2 Loading chart with 800 data points for SOL/USDT (30m)
eruda.js:2 Loading chart with 720 data points for SOL/USDT (1h)
eruda.js:2 Loading chart with 500 data points for SOL/USDT (4h)
eruda.js:2 Loading chart with 365 data points for SOL/USDT (1d)
eruda.js:2 Loading chart with 150 data points for SOL/USDT (3d)
eruda.js:2 Loading chart with 200 data points for SOL/USDT (1w)
eruda.js:2 Loading chart with 60 data points for SOL/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for XRP/USDT (1m)
eruda.js:2 Loading chart with 1000 data points for XRP/USDT (5m)
eruda.js:2 Loading chart with 800 data points for XRP/USDT (15m)
eruda.js:2 Loading chart with 800 data points for XRP/USDT (30m)
eruda.js:2 Loading chart with 720 data points for XRP/USDT (1h)
eruda.js:2 Loading chart with 150 data points for XRP/USDT (3d)
eruda.js:2 Loading chart with 500 data points for XRP/USDT (4h)
eruda.js:2 Loading chart with 365 data points for XRP/USDT (1d)
eruda.js:2 Loading chart with 200 data points for XRP/USDT (1w)
eruda.js:2 Loading chart with 60 data points for XRP/USDT (1M)
eruda.js:2 [UltimateManager] Chart data preloading completed
eruda.js:2 [UltimateManager] System initialization complete - ALL timers synchronized to 240s
eruda.js:2 [System] Ultimate manager active - synchronized 4-minute intervals
eruda.js:2 ⚡ Starting immediate pair selection calculation for BTC/USDT
eruda.js:2 ✅ pair-selection calculation allowed - bypassing 4-minute restriction
eruda.js:2 ✅ Calculation allowed: pair-selection
eruda.js:2 ⚡ Starting calculation loop for 10 timeframes
eruda.js:2 ⚡ About to calculate 1m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1m)
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 [1m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1m] Preparing chart data with 1000 candles
eruda.js:2 [1m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 2 patterns for 1m timeframe
eruda.js:2 ⚡ Successfully calculated 1m: SHORT
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (5m)
eruda.js:2 [5m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [5m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [5m] Preparing chart data with 1000 candles
eruda.js:2 [5m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [5m] Consolidated signal result: SHORT (80%)
eruda.js:2 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=SHORT, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 5m: Signal ready - Direction=SHORT, Confidence=80%
eruda.js:2 Generated 2 patterns for 5m timeframe
eruda.js:2 ⚡ Successfully calculated 5m: SHORT
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (15m)
eruda.js:2 [15m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [15m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [15m] Preparing chart data with 800 candles
eruda.js:2 [15m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [15m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 15m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 5 patterns for 15m timeframe
eruda.js:2 ⚡ Successfully calculated 15m: SHORT
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (30m)
eruda.js:2 [30m] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [30m] Using live price: 109781.59767570333 for calculation
eruda.js:2 [30m] Preparing chart data with 800 candles
eruda.js:2 [30m] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [30m] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 30m: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 6 patterns for 30m timeframe
eruda.js:2 ⚡ Successfully calculated 30m: SHORT
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1h)
eruda.js:2 [1h] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1h] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1h] Preparing chart data with 720 candles
eruda.js:2 [1h] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1h] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1h: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 4 patterns for 1h timeframe
eruda.js:2 ⚡ Successfully calculated 1h: SHORT
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (4h)
eruda.js:2 [4h] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [4h] Using live price: 109781.59767570333 for calculation
eruda.js:2 [4h] Preparing chart data with 500 candles
eruda.js:2 [4h] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [4h] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 4h: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 4 patterns for 4h timeframe
eruda.js:2 ⚡ Successfully calculated 4h: LONG
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1d)
eruda.js:2 [1d] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1d] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1d] Preparing chart data with 365 candles
eruda.js:2 [1d] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1d] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1d: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 7 patterns for 1d timeframe
eruda.js:2 ⚡ Successfully calculated 1d: SHORT
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (3d)
eruda.js:2 [3d] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [3d] Using live price: 109781.59767570333 for calculation
eruda.js:2 [3d] Preparing chart data with 150 candles
eruda.js:2 [3d] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [3d] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 6 patterns for 3d timeframe
eruda.js:2 ⚡ Successfully calculated 3d: LONG
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1w)
eruda.js:2 [1w] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1w] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1w] Preparing chart data with 200 candles
eruda.js:2 [1w] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1w] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 1w: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 9 patterns for 1w timeframe
eruda.js:2 ⚡ Successfully calculated 1w: LONG
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1M)
eruda.js:2 [1M] Fresh price fetched for BTC/USDT: 109781.59767570333
eruda.js:2 [1M] Using live price: 109781.59767570333 for calculation
eruda.js:2 [1M] Preparing chart data with 60 candles
eruda.js:2 [1M] Using consolidated calculation engine with live price 109781.59767570333
eruda.js:2 [1M] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1M: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 8 patterns for 1M timeframe
eruda.js:2 ⚡ Successfully calculated 1M: SHORT
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: Array(10)
eruda.js:2 🔧 Aligned signals after processing: Array(10)
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: Array(10)
eruda.js:2 📊 About to call setSignals with: Array(10)
eruda.js:2 📊 Sample signal structure: Array(18)
eruda.js:2 📊 Sample 1d signal: Object
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109781.59767570333
eruda.js:2 [HeatMap] Received synchronized calculation event - updating heatmap
eruda.js:2 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 📈 Prediction recorded: BTC/USDT 1m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 1m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 5m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 5m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 15m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 15m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 30m SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 30m SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1h SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 113075.05, Take Profit: 103194.70
eruda.js:2 Recorded prediction: 1h SHORT @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 4h LONG @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 104292.52, Take Profit: 120759.76
eruda.js:2 Recorded prediction: 4h LONG @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1d SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 116368.49, Take Profit: 96607.81
eruda.js:2 Recorded prediction: 1d SHORT @ 109781.59767570333
eruda.js:2 🔄 Signals updated, syncing timer with actual calculation time
eruda.js:2 📈 Prediction recorded: BTC/USDT 3d LONG @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 100999.07, Take Profit: 127346.65
eruda.js:2 Recorded prediction: 3d LONG @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1w LONG @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 98803.44, Take Profit: 131737.92
eruda.js:2 Recorded prediction: 1w LONG @ 109781.59767570333
eruda.js:2 📈 Prediction recorded: BTC/USDT 1M SHORT @ 109781.59767570333
eruda.js:2 🎯 Stop Loss: 126248.84, Take Profit: 76847.12
eruda.js:2 Recorded prediction: 1M SHORT @ 109781.59767570333
eruda.js:2 Found 10 valid signals for recommendation for BTC/USDT
eruda.js:2 Updating trade recommendation for 4h timeframe
eruda.js:2 Calculation process complete for BTC/USDT - 10 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 🛑 Calculation blocked: 238s until next 4-minute interval
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 220s
eruda.js:2 [UltimateManager] Next fetch in 200s
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109781.59767570333
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 180s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 160s
eruda.js:2 [UltimateManager] Next fetch in 140s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109775.96249051722
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109775.96249051722
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109775.96249051722
eruda.js:2 [UltimateManager] Next fetch in 120s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 100s
eruda.js:2 [UltimateManager] Next fetch in 80s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109775.96249051722
eruda.js:2 [UltimateManager] Next fetch in 60s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 40s
eruda.js:2 [UltimateManager] Next fetch in 20s
eruda.js:2 [CentralizedPriceManager] Fetching prices for 1 symbols
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109803.43215454147
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109803.43215454147
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109803.43215454147
eruda.js:2 [UltimateManager] Next fetch in 0s
eruda.js:2 [UltimateManager] 4-minute synchronized calculation starting
eruda.js:2 [HeatMap] Received synchronized calculation event - updating heatmap
eruda.js:2 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 [BTC/USDT] Calculation blocked - 0s until next 4-minute sync
eruda.js:2 [UltimateManager] Fallback price synchronized: BTC/USDT = $109803.43215454147
eruda.js:2 [SignalDashboard] Immediate calculation triggered by UltimateManager
eruda.js:2 🛑 Calculation blocked: 0s until next 4-minute interval
eruda.js:2 [UltimateManager] Fallback price synchronized: ETH/USDT = $2763.7555844647786
eruda.js:2 [UltimateManager] Fallback price synchronized: BNB/USDT = $671.0546830772937
eruda.js:2 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.29942437240421
eruda.js:2 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.58735863237484
eruda.js:2 [UltimateManager] Fallback price synchronized: USDC/USD = $0.9997836450406763
eruda.js:2 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7087980873244565
eruda.js:2 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.206542726669593
eruda.js:2 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.1948105994050307
eruda.js:2 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29065222516573513
eruda.js:2 [UltimateManager] Fallback price synchronized: TON/USDT = $3.3105216930912595
eruda.js:2 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.228737183333491
eruda.js:2 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
eruda.js:2 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.000013204646343349201
eruda.js:2 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.3727971834881
eruda.js:2 [UltimateManager] Fallback price synchronized: BCH/USDT = $442.4224652501142
eruda.js:2 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.332709680026873
eruda.js:2 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.262239209607995
eruda.js:2 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.280539050594155
eruda.js:2 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.603788672820431
eruda.js:2 [UltimateManager] Fallback price synchronized: XMR/USDT = $338.84793627508367
eruda.js:2 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.371657224952664
eruda.js:2 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.18029504109294842
eruda.js:2 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.708952590388469
eruda.js:2 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.098532541937175
eruda.js:2 [UltimateManager] Fallback price synchronized: VET/USDT = $0.025860305579826635
eruda.js:2 [UltimateManager] Fallback price synchronized: APT/USDT = $5.087648822352385
eruda.js:2 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.6240504707067016
eruda.js:2 [UltimateManager] Fallback price synchronized: AAVE/USDT = $307.39071668785095
eruda.js:2 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.4027470891121478
eruda.js:2 [UltimateManager] Fallback price synchronized: OP/USDT = $0.7017026554727508
eruda.js:2 [UltimateManager] Fallback price synchronized: MKR/USDT = $2104.423432417125
eruda.js:2 [UltimateManager] Fallback price synchronized: GRT/USDT = $0.10067354613950595
eruda.js:2 [UltimateManager] Fallback price synchronized: STX/USDT = $0.7064113704127948
eruda.js:2 [UltimateManager] Fallback price synchronized: INJ/USDT = $13.8625628681819
eruda.js:2 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.20541443596700884
eruda.js:2 [UltimateManager] Fallback price synchronized: LDO/USDT = $0.9475662888923031
eruda.js:2 [UltimateManager] Fallback price synchronized: THETA/USDT = $0.8155278884651826
eruda.js:2 [UltimateManager] Fallback price synchronized: SUI/USDT = $3.4553348138152997
eruda.js:2 [UltimateManager] Fallback price synchronized: RUNE/USDT = $1.7422645839345205
eruda.js:2 [UltimateManager] Fallback price synchronized: MANA/USDT = $0.29978921971452427
eruda.js:2 [UltimateManager] Fallback price synchronized: SAND/USDT = $0.2970252353275401
eruda.js:2 [UltimateManager] Fallback price synchronized: FET/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
eruda.js:2 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
eruda.js:2 [UltimateManager] Multi-pair fetch: 50 symbols updated
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 220s
eruda.js:2 [UltimateManager] Next fetch in 200s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109803.43215454147
eruda.js:2 [UltimateManager] Next fetch in 180s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 160s
eruda.js:2 [UltimateManager] Next fetch in 140s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109806.34763967548
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109806.34763967548
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109806.34763967548
eruda.js:2 [UltimateManager] Next fetch in 120s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 100s
eruda.js:2 [UltimateManager] Next fetch in 80s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109806.34763967548
eruda.js:2 [UltimateManager] Next fetch in 60s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 40s
eruda.js:2 [UltimateManager] Next fetch in 20s
eruda.js:2 [CentralizedPriceManager] Fetching prices for 1 symbols
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109811.25681850873
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109811.25681850873
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109811.25681850873
eruda.js:2 [UltimateManager] Next fetch in 0s
eruda.js:2 [UltimateManager] 4-minute synchronized calculation starting
eruda.js:2 [HeatMap] Received synchronized calculation event - updating heatmap
eruda.js:2 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 [BTC/USDT] 4-minute synchronized calculation (479.884s since last)
eruda.js:2 ✅ 4-minute calculation allowed (trigger: 4-minute-sync)
eruda.js:2 ✅ Calculation allowed: 4-minute-sync
eruda.js:2 ⚡ Starting calculation loop for 10 timeframes
eruda.js:2 ⚡ About to calculate 1m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1m)
eruda.js:2 [1m] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [1m] Using live price: 109811.25681850873 for calculation
eruda.js:2 [1m] Preparing chart data with 1000 candles
eruda.js:2 [1m] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [1m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 2 patterns for 1m timeframe
eruda.js:2 ⚡ Successfully calculated 1m: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: BTC/USDT = $109811.25681850873
eruda.js:2 [SignalDashboard] Immediate calculation triggered by UltimateManager
eruda.js:2 🛑 Calculation blocked: 240s until next 4-minute interval
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (5m)
eruda.js:2 [5m] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [5m] Using live price: 109811.25681850873 for calculation
eruda.js:2 [5m] Preparing chart data with 1000 candles
eruda.js:2 [5m] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [5m] Consolidated signal result: SHORT (80%)
eruda.js:2 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=SHORT, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 5m: Signal ready - Direction=SHORT, Confidence=80%
eruda.js:2 Generated 0 patterns for 5m timeframe
eruda.js:2 ⚡ Successfully calculated 5m: SHORT
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (15m)
eruda.js:2 [15m] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [15m] Using live price: 109811.25681850873 for calculation
eruda.js:2 [15m] Preparing chart data with 800 candles
eruda.js:2 [15m] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [15m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 15m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 6 patterns for 15m timeframe
eruda.js:2 ⚡ Successfully calculated 15m: SHORT
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (30m)
eruda.js:2 [30m] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [30m] Using live price: 109811.25681850873 for calculation
eruda.js:2 [30m] Preparing chart data with 800 candles
eruda.js:2 [30m] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [30m] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 30m: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 7 patterns for 30m timeframe
eruda.js:2 ⚡ Successfully calculated 30m: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: ETH/USDT = $2761.648438833663
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1h)
eruda.js:2 [1h] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [1h] Using live price: 109811.25681850873 for calculation
eruda.js:2 [1h] Preparing chart data with 720 candles
eruda.js:2 [1h] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [1h] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1h: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 4 patterns for 1h timeframe
eruda.js:2 ⚡ Successfully calculated 1h: SHORT
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (4h)
eruda.js:2 [4h] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [4h] Using live price: 109811.25681850873 for calculation
eruda.js:2 [4h] Preparing chart data with 500 candles
eruda.js:2 [4h] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [4h] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 4h: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 3 patterns for 4h timeframe
eruda.js:2 ⚡ Successfully calculated 4h: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: BNB/USDT = $670.0860281790765
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1d)
eruda.js:2 [1d] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [1d] Using live price: 109811.25681850873 for calculation
eruda.js:2 [1d] Preparing chart data with 365 candles
eruda.js:2 [1d] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [1d] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1d: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 8 patterns for 1d timeframe
eruda.js:2 ⚡ Successfully calculated 1d: SHORT
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (3d)
eruda.js:2 [3d] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [3d] Using live price: 109811.25681850873 for calculation
eruda.js:2 [3d] Preparing chart data with 150 candles
eruda.js:2 [3d] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [3d] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 8 patterns for 3d timeframe
eruda.js:2 ⚡ Successfully calculated 3d: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.300465552359079
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1w)
eruda.js:2 [1w] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [1w] Using live price: 109811.25681850873 for calculation
eruda.js:2 [1w] Preparing chart data with 200 candles
eruda.js:2 [1w] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [1w] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 1w: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 7 patterns for 1w timeframe
eruda.js:2 ⚡ Successfully calculated 1w: LONG
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1M)
eruda.js:2 [1M] Fresh price fetched for BTC/USDT: 109811.25681850873
eruda.js:2 [1M] Using live price: 109811.25681850873 for calculation
eruda.js:2 [1M] Preparing chart data with 60 candles
eruda.js:2 [1M] Using consolidated calculation engine with live price 109811.25681850873
eruda.js:2 [1M] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1M: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 6 patterns for 1M timeframe
eruda.js:2 ⚡ Successfully calculated 1M: SHORT
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: Array(10)
eruda.js:2 🔧 Aligned signals after processing: Array(10)
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: Array(10)
eruda.js:2 📊 About to call setSignals with: Array(10)
eruda.js:2 📊 Sample signal structure: Array(18)
eruda.js:2 📊 Sample 1d signal: Object
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109811.25681850873
eruda.js:2 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.53973732376915
eruda.js:2 📈 Prediction recorded: BTC/USDT 1m SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 113105.59, Take Profit: 103222.58
eruda.js:2 Recorded prediction: 1m SHORT @ 109811.25681850873
eruda.js:2 📈 Prediction recorded: BTC/USDT 5m SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 113105.59, Take Profit: 103222.58
eruda.js:2 Recorded prediction: 5m SHORT @ 109811.25681850873
eruda.js:2 [UltimateManager] Fallback price synchronized: USDC/USD = $0.999617486477995
eruda.js:2 📈 Prediction recorded: BTC/USDT 15m SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 113105.59, Take Profit: 103222.58
eruda.js:2 Recorded prediction: 15m SHORT @ 109811.25681850873
eruda.js:2 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7093643187379501
eruda.js:2 📈 Prediction recorded: BTC/USDT 30m SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 113105.59, Take Profit: 103222.58
eruda.js:2 Recorded prediction: 30m SHORT @ 109811.25681850873
eruda.js:2 📈 Prediction recorded: BTC/USDT 1h SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 113105.59, Take Profit: 103222.58
eruda.js:2 Recorded prediction: 1h SHORT @ 109811.25681850873
eruda.js:2 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.23179381891308
eruda.js:2 📈 Prediction recorded: BTC/USDT 4h LONG @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 104320.69, Take Profit: 120792.38
eruda.js:2 Recorded prediction: 4h LONG @ 109811.25681850873
eruda.js:2 🔄 Signals updated, syncing timer with actual calculation time
eruda.js:2 📈 Prediction recorded: BTC/USDT 1d SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 116399.93, Take Profit: 96633.91
eruda.js:2 Recorded prediction: 1d SHORT @ 109811.25681850873
eruda.js:2 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.19473860457910172
eruda.js:2 📈 Prediction recorded: BTC/USDT 3d LONG @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 101026.36, Take Profit: 127381.06
eruda.js:2 Recorded prediction: 3d LONG @ 109811.25681850873
eruda.js:2 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29063789484538016
eruda.js:2 📈 Prediction recorded: BTC/USDT 1w LONG @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 98830.13, Take Profit: 131773.51
eruda.js:2 Recorded prediction: 1w LONG @ 109811.25681850873
eruda.js:2 📈 Prediction recorded: BTC/USDT 1M SHORT @ 109811.25681850873
eruda.js:2 🎯 Stop Loss: 126282.95, Take Profit: 76867.88
eruda.js:2 Recorded prediction: 1M SHORT @ 109811.25681850873
eruda.js:2 Found 10 valid signals for recommendation for BTC/USDT
eruda.js:2 Updating trade recommendation for 4h timeframe
eruda.js:2 Calculation process complete for BTC/USDT - 10 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 🛑 Calculation blocked: 238s until next 4-minute interval
eruda.js:2 [UltimateManager] Fallback price synchronized: TON/USDT = $3.314142433101248
eruda.js:2 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.242381207104287
eruda.js:2 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
eruda.js:2 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.000013209094351852544
eruda.js:2 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.4259685607316
eruda.js:2 [UltimateManager] Fallback price synchronized: BCH/USDT = $442.27094950708863
eruda.js:2 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.343079928086143
eruda.js:2 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.260211483607877
eruda.js:2 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.28085185625942377
eruda.js:2 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.602759924743721
eruda.js:2 [UltimateManager] Fallback price synchronized: XMR/USDT = $339.36714097588833
eruda.js:2 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.374598198571725
eruda.js:2 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.1803399160956876
eruda.js:2 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.710383589393632
eruda.js:2 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.094723746713677
eruda.js:2 [UltimateManager] Fallback price synchronized: VET/USDT = $0.025869486971063248
eruda.js:2 [UltimateManager] Fallback price synchronized: APT/USDT = $5.089684486825205
eruda.js:2 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.629016324307316
eruda.js:2 [UltimateManager] Fallback price synchronized: AAVE/USDT = $307.8933068486095
eruda.js:2 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.4027470891121478
eruda.js:2 [UltimateManager] Fallback price synchronized: OP/USDT = $0.7017026554727508
eruda.js:2 [UltimateManager] Fallback price synchronized: MKR/USDT = $2104.423432417125
eruda.js:2 [UltimateManager] Fallback price synchronized: GRT/USDT = $0.10067354613950595
eruda.js:2 [UltimateManager] Fallback price synchronized: STX/USDT = $0.7064113704127948
eruda.js:2 [UltimateManager] Fallback price synchronized: INJ/USDT = $13.8625628681819
eruda.js:2 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.20541443596700884
eruda.js:2 [UltimateManager] Fallback price synchronized: LDO/USDT = $0.9475662888923031
eruda.js:2 [UltimateManager] Fallback price synchronized: THETA/USDT = $0.8155278884651826
eruda.js:2 [UltimateManager] Fallback price synchronized: SUI/USDT = $3.4553348138152997
eruda.js:2 [UltimateManager] Fallback price synchronized: RUNE/USDT = $1.7422645839345205
eruda.js:2 [UltimateManager] Fallback price synchronized: MANA/USDT = $0.29978921971452427
eruda.js:2 [UltimateManager] Fallback price synchronized: SAND/USDT = $0.2970252353275401
eruda.js:2 [UltimateManager] Fallback price synchronized: FET/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
eruda.js:2 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
eruda.js:2 [UltimateManager] Multi-pair fetch: 50 symbols updated
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 220s
eruda.js:2 [UltimateManager] Next fetch in 200s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109811.25681850873
eruda.js:2 [UltimateManager] Next fetch in 180s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 160s
eruda.js:2 [UltimateManager] Next fetch in 140s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109800.9295641488
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109800.9295641488
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109800.9295641488
eruda.js:2 [UltimateManager] Next fetch in 120s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 100s
eruda.js:2 [UltimateManager] Next fetch in 80s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109800.9295641488
eruda.js:2 [UltimateManager] Next fetch in 60s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 40s
eruda.js:2 [UltimateManager] Next fetch in 20s
eruda.js:2 [CentralizedPriceManager] Fetching prices for 1 symbols
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109817.2574750415
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109817.2574750415
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109817.2574750415
eruda.js:2 [UltimateManager] Next fetch in 0s
eruda.js:2 [UltimateManager] 4-minute synchronized calculation starting
eruda.js:2 [HeatMap] Received synchronized calculation event - updating heatmap
eruda.js:2 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 [BTC/USDT] Calculation blocked - 0s until next 4-minute sync
eruda.js:2 [UltimateManager] Fallback price synchronized: BTC/USDT = $109817.2574750415
eruda.js:2 [SignalDashboard] Immediate calculation triggered by UltimateManager
eruda.js:2 ✅ 4-minute calculation allowed (trigger: unknown)
eruda.js:2 ✅ Calculation allowed: unknown
eruda.js:2 ⚡ Starting calculation loop for 10 timeframes
eruda.js:2 ⚡ About to calculate 1m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1m timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 1m timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 1m: null
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 5m timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 5m: null
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 15m timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 15m: null
eruda.js:2 [UltimateManager] Fallback price synchronized: ETH/USDT = $2770.153409109642
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 30m timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 30m: null
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 1h timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 1h: null
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 4h timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 4h: null
eruda.js:2 [UltimateManager] Fallback price synchronized: BNB/USDT = $669.3880921795686
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 1d timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 1d: null
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 3d timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 3d: null
eruda.js:2 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.299223943822647
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 1w timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 1w: null
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: Not enough data for BTC/USDT on 1M timeframe. Skipping.
eruda.js:2 ⚡ Successfully calculated 1M: null
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: Array(10)
eruda.js:2 🔧 Aligned signals after processing: Array(10)
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: Array(10)
eruda.js:2 📊 About to call setSignals with: Array(10)
eruda.js:2 📊 Sample signal structure: no 1d signal
eruda.js:2 📊 Sample 1d signal: null
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109817.2574750415
eruda.js:2 Found 0 valid signals for recommendation for BTC/USDT
eruda.js:2 Calculation process complete for BTC/USDT - 0 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 🛑 Calculation blocked: 239s until next 4-minute interval
eruda.js:2 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.52293389114516
eruda.js:2 [UltimateManager] Fallback price synchronized: USDC/USD = $0.9999049632333794
eruda.js:2 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7086053254723769
eruda.js:2 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.23643274703569
eruda.js:2 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.19456902312296187
eruda.js:2 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29065828408393984
eruda.js:2 [UltimateManager] Fallback price synchronized: TON/USDT = $3.313359704645251
eruda.js:2 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.248530042004282
eruda.js:2 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
eruda.js:2 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.000013202264445258263
eruda.js:2 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.42022213233462
eruda.js:2 [UltimateManager] Fallback price synchronized: BCH/USDT = $441.03923771456874
eruda.js:2 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.342861252934537
eruda.js:2 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.258431696660741
eruda.js:2 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.28084413505768685
eruda.js:2 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.601483695323158
eruda.js:2 [UltimateManager] Fallback price synchronized: XMR/USDT = $339.7113483281528
eruda.js:2 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.355213989799243
eruda.js:2 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.18020421690011867
eruda.js:2 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.7129784800690357
eruda.js:2 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.102260760880899
eruda.js:2 [UltimateManager] Fallback price synchronized: VET/USDT = $0.025874414086170926
eruda.js:2 [UltimateManager] Fallback price synchronized: APT/USDT = $5.084855937870115
eruda.js:2 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.6280471186576255
eruda.js:2 [UltimateManager] Fallback price synchronized: AAVE/USDT = $308.16667627375796
eruda.js:2 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.4027470891121478
eruda.js:2 [UltimateManager] Fallback price synchronized: OP/USDT = $0.7017026554727508
eruda.js:2 [UltimateManager] Fallback price synchronized: MKR/USDT = $2104.423432417125
eruda.js:2 [UltimateManager] Fallback price synchronized: GRT/USDT = $0.10067354613950595
eruda.js:2 [UltimateManager] Fallback price synchronized: STX/USDT = $0.7064113704127948
eruda.js:2 [UltimateManager] Fallback price synchronized: INJ/USDT = $13.8625628681819
eruda.js:2 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.20541443596700884
eruda.js:2 [UltimateManager] Fallback price synchronized: LDO/USDT = $0.9475662888923031
eruda.js:2 [UltimateManager] Fallback price synchronized: THETA/USDT = $0.8155278884651826
eruda.js:2 [UltimateManager] Fallback price synchronized: SUI/USDT = $3.4553348138152997
eruda.js:2 [UltimateManager] Fallback price synchronized: RUNE/USDT = $1.7422645839345205
eruda.js:2 [UltimateManager] Fallback price synchronized: MANA/USDT = $0.29978921971452427
eruda.js:2 [UltimateManager] Fallback price synchronized: SAND/USDT = $0.2970252353275401
eruda.js:2 [UltimateManager] Fallback price synchronized: FET/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
eruda.js:2 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
eruda.js:2 [UltimateManager] Multi-pair fetch: 50 symbols updated
eruda.js:2 [UltimateManager] Next fetch in 220s
eruda.js:2 [UltimateManager] Next fetch in 200s
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109817.2574750415
eruda.js:2 [UltimateManager] Next fetch in 180s
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109835.39790629047
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109835.39790629047
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109835.39790629047
eruda.js:2 [CentralizedPriceManager] Fetching prices for 1 symbols
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109835.39790629047
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 160s
eruda.js:2 [UltimateManager] Next fetch in 140s
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d:1 
            
            
           Failed to load resource: the server responded with a status of 500 (Internal Server Error)
eruda.js:2 [UltimateManager] Next fetch in 120s
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109829.65809830568
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109829.65809830568
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109829.65809830568
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
eruda.js:2 [UltimateManager] Next fetch in 100s
eruda.js:2 [UltimateManager] Next fetch in 80s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
eruda.js:2 [UltimateManager] Next fetch in 60s
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109829.65809830568
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
eruda.js:2 [UltimateManager] Next fetch in 40s
eruda.js:2 [UltimateManager] Next fetch in 20s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
eruda.js:2 [UltimateManager] Next fetch in 0s
eruda.js:2 [UltimateManager] 4-minute synchronized calculation starting
eruda.js:2 [HeatMap] Received synchronized calculation event - updating heatmap
eruda.js:2 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 [BTC/USDT] 4-minute synchronized calculation (394.914s since last)
eruda.js:2 ✅ 4-minute calculation allowed (trigger: 4-minute-sync)
eruda.js:2 ✅ Calculation allowed: 4-minute-sync
eruda.js:2 ⚡ Starting calculation loop for 10 timeframes
eruda.js:2 ⚡ About to calculate 1m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1m)
eruda.js:2 [1m] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [1m] Using live price: 109829.65809830568 for calculation
eruda.js:2 [1m] Preparing chart data with 1000 candles
eruda.js:2 [1m] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [1m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 2 patterns for 1m timeframe
eruda.js:2 ⚡ Successfully calculated 1m: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: BTC/USDT = $109829.65809830568
eruda.js:2 [SignalDashboard] Immediate calculation triggered by UltimateManager
eruda.js:2 🛑 Calculation blocked: 240s until next 4-minute interval
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (5m)
eruda.js:2 [5m] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [5m] Using live price: 109829.65809830568 for calculation
eruda.js:2 [5m] Preparing chart data with 1000 candles
eruda.js:2 [5m] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [5m] Consolidated signal result: SHORT (80%)
eruda.js:2 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=SHORT, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 5m: Signal ready - Direction=SHORT, Confidence=80%
eruda.js:2 Generated 3 patterns for 5m timeframe
eruda.js:2 ⚡ Successfully calculated 5m: SHORT
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (15m)
eruda.js:2 [15m] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [15m] Using live price: 109829.65809830568 for calculation
eruda.js:2 [15m] Preparing chart data with 800 candles
eruda.js:2 [15m] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [15m] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 15m: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 6 patterns for 15m timeframe
eruda.js:2 ⚡ Successfully calculated 15m: SHORT
eruda.js:2 [UltimateManager] Fallback price synchronized: ETH/USDT = $2775.208966534974
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (30m)
eruda.js:2 [30m] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [30m] Using live price: 109829.65809830568 for calculation
eruda.js:2 [30m] Preparing chart data with 800 candles
eruda.js:2 [30m] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [30m] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 30m: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 4 patterns for 30m timeframe
eruda.js:2 ⚡ Successfully calculated 30m: SHORT
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1h)
eruda.js:2 [1h] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [1h] Using live price: 109829.65809830568 for calculation
eruda.js:2 [1h] Preparing chart data with 720 candles
eruda.js:2 [1h] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [1h] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1h: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 5 patterns for 1h timeframe
eruda.js:2 ⚡ Successfully calculated 1h: SHORT
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (4h)
eruda.js:2 [4h] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [4h] Using live price: 109829.65809830568 for calculation
eruda.js:2 [4h] Preparing chart data with 500 candles
eruda.js:2 [4h] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [4h] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 4h: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 6 patterns for 4h timeframe
eruda.js:2 ⚡ Successfully calculated 4h: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: BNB/USDT = $669.6426676910806
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1d)
eruda.js:2 [1d] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [1d] Using live price: 109829.65809830568 for calculation
eruda.js:2 [1d] Preparing chart data with 365 candles
eruda.js:2 [1d] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [1d] Consolidated signal result: SHORT (95%)
eruda.js:2 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
eruda.js:2 [ConsolidatedEngine] 1d: Signal ready - Direction=SHORT, Confidence=95%
eruda.js:2 Generated 7 patterns for 1d timeframe
eruda.js:2 ⚡ Successfully calculated 1d: SHORT
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (3d)
eruda.js:2 [3d] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [3d] Using live price: 109829.65809830568 for calculation
eruda.js:2 [3d] Preparing chart data with 150 candles
eruda.js:2 [3d] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [3d] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 5 patterns for 3d timeframe
eruda.js:2 ⚡ Successfully calculated 3d: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.2988545059999876
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1w)
eruda.js:2 [1w] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [1w] Using live price: 109829.65809830568 for calculation
eruda.js:2 [1w] Preparing chart data with 200 candles
eruda.js:2 [1w] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [1w] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 1w: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 10 patterns for 1w timeframe
eruda.js:2 ⚡ Successfully calculated 1w: LONG
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1M)
eruda.js:2 [1M] Fresh price fetched for BTC/USDT: 109829.65809830568
eruda.js:2 [1M] Using live price: 109829.65809830568 for calculation
eruda.js:2 [1M] Preparing chart data with 60 candles
eruda.js:2 [1M] Using consolidated calculation engine with live price 109829.65809830568
eruda.js:2 [1M] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1M: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 2 patterns for 1M timeframe
eruda.js:2 ⚡ Successfully calculated 1M: SHORT
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: (10) ['1m: SHORT', '5m: SHORT', '15m: SHORT', '30m: SHORT', '1h: SHORT', '4h: LONG', '1d: SHORT', '3d: LONG', '1w: LONG', '1M: SHORT']
eruda.js:2 🔧 Aligned signals after processing: (10) ['1m: SHORT', '5m: SHORT', '15m: SHORT', '30m: SHORT', '1h: SHORT', '4h: LONG', '1d: SHORT', '3d: LONG', '1w: LONG', '1M: SHORT']
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: (10) ['1m: SHORT', '5m: SHORT', '15m: SHORT', '30m: SHORT', '1h: SHORT', '4h: LONG', '1d: SHORT', '3d: LONG', '1w: LONG', '1M: SHORT']
eruda.js:2 📊 About to call setSignals with: (10) ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '3d', '1w', '1M']
eruda.js:2 📊 Sample signal structure: (18) ['symbol', 'timeframe', 'direction', 'confidence', 'entryPrice', 'stopLoss', 'takeProfit', 'timestamp', 'successProbability', 'indicators', 'patternFormations', 'supportResistance', 'environment', 'recommendedLeverage', 'riskReward', 'marketStructure', 'volumeProfile', 'macroInsights']
eruda.js:2 📊 Sample 1d signal: {symbol: 'BTC/USDT', timeframe: '1d', direction: 'SHORT', confidence: 97.25, entryPrice: 109829.65809830568, …}
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.6882107129837
eruda.js:2 📈 Prediction recorded: BTC/USDT 1m SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 113124.55, Take Profit: 103239.88
eruda.js:2 Recorded prediction: 1m SHORT @ 109829.65809830568
eruda.js:2 📈 Prediction recorded: BTC/USDT 5m SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 113124.55, Take Profit: 103239.88
eruda.js:2 Recorded prediction: 5m SHORT @ 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: USDC/USD = $0.9998965019969691
eruda.js:2 📈 Prediction recorded: BTC/USDT 15m SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 113124.55, Take Profit: 103239.88
eruda.js:2 Recorded prediction: 15m SHORT @ 109829.65809830568
eruda.js:2 📈 Prediction recorded: BTC/USDT 30m SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 113124.55, Take Profit: 103239.88
eruda.js:2 Recorded prediction: 30m SHORT @ 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7096463651575119
eruda.js:2 📈 Prediction recorded: BTC/USDT 1h SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 113124.55, Take Profit: 103239.88
eruda.js:2 Recorded prediction: 1h SHORT @ 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.24659712960033
eruda.js:2 📈 Prediction recorded: BTC/USDT 4h LONG @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 104338.18, Take Profit: 120812.62
eruda.js:2 Recorded prediction: 4h LONG @ 109829.65809830568
eruda.js:2 🔄 Signals updated, syncing timer with actual calculation time
eruda.js:2 📈 Prediction recorded: BTC/USDT 1d SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 116419.44, Take Profit: 96650.10
eruda.js:2 Recorded prediction: 1d SHORT @ 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.19466831363319134
eruda.js:2 📈 Prediction recorded: BTC/USDT 3d LONG @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 101043.29, Take Profit: 127402.40
eruda.js:2 Recorded prediction: 3d LONG @ 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29088275531575
eruda.js:2 📈 Prediction recorded: BTC/USDT 1w LONG @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 98846.69, Take Profit: 131795.59
eruda.js:2 Recorded prediction: 1w LONG @ 109829.65809830568
eruda.js:2 📈 Prediction recorded: BTC/USDT 1M SHORT @ 109829.65809830568
eruda.js:2 🎯 Stop Loss: 126304.11, Take Profit: 76880.76
eruda.js:2 Recorded prediction: 1M SHORT @ 109829.65809830568
eruda.js:2 [UltimateManager] Fallback price synchronized: TON/USDT = $3.317722932247129
eruda.js:2 Found 10 valid signals for recommendation for BTC/USDT
eruda.js:2 Updating trade recommendation for 4h timeframe
eruda.js:2 No signal available for BTC/USDT on 4h
eruda.js:2 Calculation process complete for BTC/USDT - 10 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 🛑 Calculation blocked: 237s until next 4-minute interval
eruda.js:2 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.284499886921433
eruda.js:2 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
eruda.js:2 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.000013221487420449047
eruda.js:2 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.48757738784424
eruda.js:2 [UltimateManager] Fallback price synchronized: BCH/USDT = $441.79230325666896
eruda.js:2 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.36595240783984
eruda.js:2 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.263678751619098
eruda.js:2 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.2808665489212556
eruda.js:2 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.598754128107084
eruda.js:2 [UltimateManager] Fallback price synchronized: XMR/USDT = $340.41428208058
eruda.js:2 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.342500593855643
eruda.js:2 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.18023367748552077
eruda.js:2 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.716138461660795
eruda.js:2 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.105266337086403
eruda.js:2 [UltimateManager] Fallback price synchronized: VET/USDT = $0.025907048799932518
eruda.js:2 [UltimateManager] Fallback price synchronized: APT/USDT = $5.089450047325907
eruda.js:2 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.631806791117344
eruda.js:2 [UltimateManager] Fallback price synchronized: AAVE/USDT = $308.58716970623937
eruda.js:2 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.4027470891121478
eruda.js:2 [UltimateManager] Fallback price synchronized: OP/USDT = $0.7017026554727508
eruda.js:2 [UltimateManager] Fallback price synchronized: MKR/USDT = $2104.423432417125
eruda.js:2 [UltimateManager] Fallback price synchronized: GRT/USDT = $0.10067354613950595
eruda.js:2 [UltimateManager] Fallback price synchronized: STX/USDT = $0.7064113704127948
eruda.js:2 [UltimateManager] Fallback price synchronized: INJ/USDT = $13.8625628681819
eruda.js:2 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.20541443596700884
eruda.js:2 [UltimateManager] Fallback price synchronized: LDO/USDT = $0.9475662888923031
eruda.js:2 [UltimateManager] Fallback price synchronized: THETA/USDT = $0.8155278884651826
eruda.js:2 [UltimateManager] Fallback price synchronized: SUI/USDT = $3.4553348138152997
eruda.js:2 [UltimateManager] Fallback price synchronized: RUNE/USDT = $1.7422645839345205
eruda.js:2 [UltimateManager] Fallback price synchronized: MANA/USDT = $0.29978921971452427
eruda.js:2 [UltimateManager] Fallback price synchronized: SAND/USDT = $0.2970252353275401
eruda.js:2 [UltimateManager] Fallback price synchronized: FET/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
eruda.js:2 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
eruda.js:2 [UltimateManager] Multi-pair fetch: 50 symbols updated
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109829.65809830568
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ eruda.js:2
queryFn @ UnifiedPerformancePanel.tsx:25
fetchFn @ @tanstack_react-query.js:840
run @ @tanstack_react-query.js:494
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
eruda.js:2 [UltimateManager] Next fetch in 220s
eruda.js:2 [UltimateManager] Next fetch in 200s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ eruda.js:2
queryFn @ UnifiedPerformancePanel.tsx:25
fetchFn @ @tanstack_react-query.js:840
run @ @tanstack_react-query.js:494
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
eruda.js:2 [UltimateManager] Next fetch in 180s
eruda.js:2 [CentralizedPriceManager] Fetching prices for 1 symbols
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ eruda.js:2
queryFn @ UnifiedPerformancePanel.tsx:25
fetchFn @ @tanstack_react-query.js:840
run @ @tanstack_react-query.js:494
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js:2243
updateTimers_fn @ @tanstack_react-query.js:2250
onQueryUpdate @ @tanstack_react-query.js:2206
(anonymous) @ @tanstack_react-query.js:998
(anonymous) @ @tanstack_react-query.js:997
batch @ @tanstack_react-query.js:583
dispatch_fn @ @tanstack_react-query.js:996
setData @ @tanstack_react-query.js:696
onSuccess @ @tanstack_react-query.js:897
resolve @ @tanstack_react-query.js:456
Promise.then
run @ @tanstack_react-query.js:498
start @ @tanstack_react-query.js:536
fetch @ @tanstack_react-query.js:926
executeFetch_fn @ @tanstack_react-query.js:2211
(anonymous) @ @tanstack_react-query.js:2245
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109865.175614382
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109865.175614382
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109865.175614382
eruda.js:2 [UltimateManager] Next fetch in 160s
eruda.js:2 [UltimateManager] Next fetch in 140s
workspace_iframe.html:32 Unrecognized feature: 'ambient-light-sensor'.
workspace_iframe.html:32 Unrecognized feature: 'battery'.
workspace_iframe.html:32 Unrecognized feature: 'execution-while-not-rendered'.
workspace_iframe.html:32 Unrecognized feature: 'execution-while-out-of-viewport'.
workspace_iframe.html:32 Unrecognized feature: 'layout-animations'.
workspace_iframe.html:32 Unrecognized feature: 'legacy-image-formats'.
workspace_iframe.html:32 Unrecognized feature: 'navigation-override'.
workspace_iframe.html:32 Unrecognized feature: 'oversized-images'.
workspace_iframe.html:32 Unrecognized feature: 'publickey-credentials'.
workspace_iframe.html:32 Unrecognized feature: 'speaker-selection'.
workspace_iframe.html:32 Unrecognized feature: 'unoptimized-images'.
workspace_iframe.html:32 Unrecognized feature: 'unsized-media'.
workspace_iframe.html:32 Allow attribute will take precedence over 'allowfullscreen'.
workspace_iframe.html:32 Allow attribute will take precedence over 'allowpaymentrequest'.
eruda.js:2 WebSocket connection to 'wss://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/?token=NN89aZNNaO8Z' failed: 
t @ Network.js:227
setupWebSocket @ client:536
(anonymous) @ client:531
eruda.js:2 Uncaught (in promise) SyntaxError: Failed to construct 'WebSocket': The URL 'wss://localhost:undefined/?token=NN89aZNNaO8Z' is invalid.
    at new t (eruda.js:2:218737)
    at setupWebSocket (client:536:19)
    at fallback (client:509:16)
    at WebSocket.<anonymous> (client:555:7)
t @ Network.js:227
setupWebSocket @ client:536
fallback @ client:509
(anonymous) @ client:555
eruda.js:2 [CentralizedPriceManager] Initializing with 4-minute intervals
eruda.js:2 Technical indicators module initialized
eruda.js:2 🎯 Live Accuracy Tracker initialized - tracking real market outcomes
eruda.js:2 🧠 Adaptive Learning Engine initialized - starting feedback loop optimization
eruda.js:2 [UltimateManager] Starting FINAL system initialization
eruda.js:2 Technical indicators module initialized
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Using existing fetch for BTC/USDT
eruda.js:2 [CentralizedPriceManager] New subscriber for BTC/USDT
eruda.js:2 [CentralizedPriceManager] Using existing fetch for BTC/USDT
eruda.js:2 [CentralizedPriceManager] Starting 4-minute fetch interval
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT
eruda.js:2 Loading chart data for BTC/USDT (1m)
eruda.js:2 Loading chart data for BTC/USDT (5m)
eruda.js:2 Loading chart data for BTC/USDT (15m)
eruda.js:2 Loading chart data for BTC/USDT (30m)
eruda.js:2 Loading chart data for BTC/USDT (1h)
eruda.js:2 Loading chart data for BTC/USDT (4h)
eruda.js:2 Loading chart data for BTC/USDT (1d)
eruda.js:2 Loading chart data for BTC/USDT (3d)
eruda.js:2 Loading chart data for BTC/USDT (1w)
eruda.js:2 Loading chart data for BTC/USDT (1M)
eruda.js:2 [CentralizedPriceManager] New subscriber for BTC/USDT
eruda.js:2 [CentralizedPriceManager] Using existing fetch for BTC/USDT
eruda.js:2 🧠 Initializing continuous learning feedback loop for BTC/USDT
eruda.js:2 🧠 Starting continuous learning for BTC/USDT
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Using existing fetch for BTC/USDT
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109849.3831888727
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT
eruda.js:2 Loading chart with 500 data points for BTC/USDT (4h)
eruda.js:2 Establishing data connection...
eruda.js:2 [UltimateManager] Triggering IMMEDIATE calculation to eliminate 2-cycle delay
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109849.3831888727
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109849.3831888727
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
eruda.js:2 Establishing data connection...
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for BTC/USDT (5m)
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for BTC/USDT (1m)
eruda.js:2 Loading chart with 800 data points for BTC/USDT (15m)
eruda.js:2 Loading chart with 800 data points for BTC/USDT (30m)
eruda.js:2 Loading chart with 720 data points for BTC/USDT (1h)
eruda.js:2 Loading chart with 365 data points for BTC/USDT (1d)
eruda.js:2 Loading chart with 150 data points for BTC/USDT (3d)
eruda.js:2 Loading chart with 200 data points for BTC/USDT (1w)
eruda.js:2 Loading chart with 60 data points for BTC/USDT (1M)
eruda.js:2 All timeframe data loaded for BTC/USDT
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (initial)
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 ✅ 4-minute calculation allowed (trigger: unknown)
eruda.js:2 ✅ Calculation allowed: unknown
eruda.js:2 ⚡ Starting calculation loop for 10 timeframes
eruda.js:2 ⚡ About to calculate 1m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1m)
eruda.js:2 [UltimateManager] Fallback price synchronized: BTC/USDT = $109849.3831888727
eruda.js:2 [SignalDashboard] Immediate calculation triggered by UltimateManager
eruda.js:2 [1m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1m] Preparing chart data with 1000 candles
eruda.js:2 [1m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1m] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1m: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 1 patterns for 1m timeframe
eruda.js:2 ⚡ Successfully calculated 1m: LONG
eruda.js:2 🛑 Calculation blocked: 240s until next 4-minute interval
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (5m)
eruda.js:2 [5m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [5m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [5m] Preparing chart data with 1000 candles
eruda.js:2 [5m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [5m] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 5m: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 3 patterns for 5m timeframe
eruda.js:2 ⚡ Successfully calculated 5m: LONG
eruda.js:2 Data connection established
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 [UltimateManager] Fallback price synchronized: ETH/USDT = $2773.7163509680436
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (15m)
eruda.js:2 [15m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [15m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [15m] Preparing chart data with 800 candles
eruda.js:2 [15m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [15m] Consolidated signal result: SHORT (70%)
eruda.js:2 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=SHORT, Confidence=70%
eruda.js:2 [ConsolidatedEngine] 15m: Signal ready - Direction=SHORT, Confidence=70%
eruda.js:2 Generated 5 patterns for 15m timeframe
eruda.js:2 ⚡ Successfully calculated 15m: SHORT
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (30m)
eruda.js:2 [30m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [30m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [30m] Preparing chart data with 800 candles
eruda.js:2 [30m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [30m] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 30m: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 3 patterns for 30m timeframe
eruda.js:2 ⚡ Successfully calculated 30m: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: BNB/USDT = $669.3968462702288
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1h)
eruda.js:2 [1h] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1h] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1h] Preparing chart data with 720 candles
eruda.js:2 [1h] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1h] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1h: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 3 patterns for 1h timeframe
eruda.js:2 ⚡ Successfully calculated 1h: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.2985146817430486
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (4h)
eruda.js:2 [4h] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [4h] Using live price: 109849.3831888727 for calculation
eruda.js:2 [4h] Preparing chart data with 500 candles
eruda.js:2 [4h] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [4h] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 4h: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 8 patterns for 4h timeframe
eruda.js:2 ⚡ Successfully calculated 4h: LONG
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1d)
eruda.js:2 [1d] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1d] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1d] Preparing chart data with 365 candles
eruda.js:2 [1d] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1d] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1d: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 6 patterns for 1d timeframe
eruda.js:2 ⚡ Successfully calculated 1d: LONG
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (3d)
eruda.js:2 [3d] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [3d] Using live price: 109849.3831888727 for calculation
eruda.js:2 [3d] Preparing chart data with 150 candles
eruda.js:2 [3d] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [3d] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 9 patterns for 3d timeframe
eruda.js:2 ⚡ Successfully calculated 3d: LONG
eruda.js:2 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.61761490477227
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1w)
eruda.js:2 [1w] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1w] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1w] Preparing chart data with 200 candles
eruda.js:2 [1w] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1w] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1w: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 5 patterns for 1w timeframe
eruda.js:2 ⚡ Successfully calculated 1w: SHORT
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1M)
eruda.js:2 [1M] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1M] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1M] Preparing chart data with 60 candles
eruda.js:2 [1M] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1M] Consolidated signal result: SHORT (70%)
eruda.js:2 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=SHORT, Confidence=70%
eruda.js:2 [ConsolidatedEngine] 1M: Signal ready - Direction=SHORT, Confidence=70%
eruda.js:2 Generated 7 patterns for 1M timeframe
eruda.js:2 ⚡ Successfully calculated 1M: SHORT
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: (10) ['1m: LONG', '5m: LONG', '15m: SHORT', '30m: LONG', '1h: LONG', '4h: LONG', '1d: LONG', '3d: LONG', '1w: SHORT', '1M: SHORT']
eruda.js:2 🔧 Aligned signals after processing: (10) ['1m: LONG', '5m: LONG', '15m: SHORT', '30m: LONG', '1h: LONG', '4h: LONG', '1d: LONG', '3d: LONG', '1w: SHORT', '1M: SHORT']
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: (10) ['1m: LONG', '5m: LONG', '15m: SHORT', '30m: LONG', '1h: LONG', '4h: LONG', '1d: LONG', '3d: LONG', '1w: SHORT', '1M: SHORT']
eruda.js:2 📊 About to call setSignals with: (10) ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '3d', '1w', '1M']
eruda.js:2 📊 Sample signal structure: (18) ['symbol', 'timeframe', 'direction', 'confidence', 'entryPrice', 'stopLoss', 'takeProfit', 'timestamp', 'successProbability', 'indicators', 'patternFormations', 'supportResistance', 'environment', 'recommendedLeverage', 'riskReward', 'marketStructure', 'volumeProfile', 'macroInsights']
eruda.js:2 📊 Sample 1d signal: {symbol: 'BTC/USDT', timeframe: '1d', direction: 'LONG', confidence: 90, entryPrice: 109849.3831888727, …}
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: USDC/USD = $0.9998884335646772
eruda.js:2 📈 Prediction recorded: BTC/USDT 1m LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 1m LONG @ 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7095492001052097
eruda.js:2 📈 Prediction recorded: BTC/USDT 5m LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 5m LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 15m SHORT @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 113144.86, Take Profit: 103258.42
eruda.js:2 Recorded prediction: 15m SHORT @ 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.24659712960033
eruda.js:2 📈 Prediction recorded: BTC/USDT 30m LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 30m LONG @ 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.19466831363319134
eruda.js:2 📈 Prediction recorded: BTC/USDT 1h LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 1h LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 4h LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 104356.91, Take Profit: 120834.32
eruda.js:2 Recorded prediction: 4h LONG @ 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29094021102828155
eruda.js:2 🔄 Signals updated, syncing timer with actual calculation time
eruda.js:2 📈 Prediction recorded: BTC/USDT 1d LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 103258.42, Take Profit: 123031.31
eruda.js:2 Recorded prediction: 1d LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 3d LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 101061.43, Take Profit: 127425.28
eruda.js:2 Recorded prediction: 3d LONG @ 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: TON/USDT = $3.318049759885494
eruda.js:2 📈 Prediction recorded: BTC/USDT 1w SHORT @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 120834.32, Take Profit: 87879.51
eruda.js:2 Recorded prediction: 1w SHORT @ 109849.3831888727
eruda.js:2 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.286018321844864
eruda.js:2 📈 Prediction recorded: BTC/USDT 1M SHORT @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 126326.79, Take Profit: 76894.57
eruda.js:2 Recorded prediction: 1M SHORT @ 109849.3831888727
eruda.js:2 Found 10 valid signals for recommendation for BTC/USDT
eruda.js:2 Updating trade recommendation for 4h timeframe
eruda.js:2 No signal available for BTC/USDT on 4h
eruda.js:2 Calculation process complete for BTC/USDT - 10 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT but calculation blocked by 4-minute timer (237s remaining)
eruda.js:2 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
eruda.js:2 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.00001321440067939814
eruda.js:2 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.48757738784424
eruda.js:2 [UltimateManager] Fallback price synchronized: BCH/USDT = $441.9533749292263
eruda.js:2 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.36595240783984
eruda.js:2 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.260795590319486
eruda.js:2 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.2808696751228096
eruda.js:2 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.598045507693045
eruda.js:2 [UltimateManager] Fallback price synchronized: XMR/USDT = $340.79125399451107
eruda.js:2 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.342349036178117
eruda.js:2 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.18020610766641904
eruda.js:2 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.7159088530194344
eruda.js:2 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.105097237493708
eruda.js:2 [UltimateManager] Fallback price synchronized: VET/USDT = $0.025918081094466385
eruda.js:2 [UltimateManager] Fallback price synchronized: APT/USDT = $5.088222109636163
eruda.js:2 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.629239403933582
eruda.js:2 [UltimateManager] Fallback price synchronized: AAVE/USDT = $285.6
eruda.js:2 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.68
eruda.js:2 [UltimateManager] Fallback price synchronized: OP/USDT = $1.52
eruda.js:2 [UltimateManager] Fallback price synchronized: MKR/USDT = $1485
eruda.js:2 [UltimateManager] Fallback price synchronized: GRT/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: STX/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: INJ/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.19
eruda.js:2 [UltimateManager] Fallback price synchronized: LDO/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: THETA/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: SUI/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: RUNE/USDT = $3.85
eruda.js:2 [UltimateManager] Fallback price synchronized: MANA/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: SAND/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: FET/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
eruda.js:2 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
eruda.js:2 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
eruda.js:2 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
eruda.js:2 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
eruda.js:2 [UltimateManager] Multi-pair fetch: 50 symbols updated
eruda.js:2 [UltimateManager] Preloading chart data for immediate analysis
eruda.js:2 Loading chart with 1000 data points for BTC/USDT (1m)
eruda.js:2 Loading chart with 1000 data points for BTC/USDT (5m)
eruda.js:2 Loading chart with 800 data points for BTC/USDT (15m)
eruda.js:2 Loading chart with 800 data points for BTC/USDT (30m)
eruda.js:2 Loading chart with 720 data points for BTC/USDT (1h)
eruda.js:2 Loading chart with 500 data points for BTC/USDT (4h)
eruda.js:2 Loading chart with 365 data points for BTC/USDT (1d)
eruda.js:2 Loading chart with 150 data points for BTC/USDT (3d)
eruda.js:2 Loading chart with 200 data points for BTC/USDT (1w)
eruda.js:2 Loading chart with 60 data points for BTC/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for ETH/USDT (1m)
eruda.js:2 Loading chart with 500 data points for ETH/USDT (4h)
eruda.js:2 Loading chart with 1000 data points for ETH/USDT (5m)
eruda.js:2 Loading chart with 800 data points for ETH/USDT (30m)
eruda.js:2 Loading chart with 800 data points for ETH/USDT (15m)
eruda.js:2 Loading chart with 720 data points for ETH/USDT (1h)
eruda.js:2 Loading chart with 365 data points for ETH/USDT (1d)
eruda.js:2 Loading chart with 200 data points for ETH/USDT (1w)
eruda.js:2 Loading chart with 150 data points for ETH/USDT (3d)
eruda.js:2 Loading chart with 60 data points for ETH/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for BNB/USDT (1m)
eruda.js:2 Loading chart with 800 data points for BNB/USDT (15m)
eruda.js:2 Loading chart with 1000 data points for BNB/USDT (5m)
eruda.js:2 Loading chart with 365 data points for BNB/USDT (1d)
eruda.js:2 Loading chart with 800 data points for BNB/USDT (30m)
eruda.js:2 Loading chart with 720 data points for BNB/USDT (1h)
eruda.js:2 Loading chart with 200 data points for BNB/USDT (1w)
eruda.js:2 Loading chart with 500 data points for BNB/USDT (4h)
eruda.js:2 Loading chart with 150 data points for BNB/USDT (3d)
eruda.js:2 Loading chart with 60 data points for BNB/USDT (1M)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for SOL/USDT (1m)
eruda.js:2 Loading chart with 800 data points for SOL/USDT (15m)
eruda.js:2 Loading chart with 1000 data points for SOL/USDT (5m)
eruda.js:2 Loading chart with 720 data points for SOL/USDT (1h)
eruda.js:2 Loading chart with 800 data points for SOL/USDT (30m)
eruda.js:2 Loading chart with 365 data points for SOL/USDT (1d)
eruda.js:2 Loading chart with 500 data points for SOL/USDT (4h)
eruda.js:2 Loading chart with 150 data points for SOL/USDT (3d)
eruda.js:2 Loading chart with 200 data points for SOL/USDT (1w)
eruda.js:2 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
eruda.js:2 Loading chart with 1000 data points for XRP/USDT (5m)
eruda.js:2 Loading chart with 60 data points for SOL/USDT (1M)
eruda.js:2 Loading chart with 800 data points for XRP/USDT (15m)
eruda.js:2 Loading chart with 1000 data points for XRP/USDT (1m)
eruda.js:2 Loading chart with 800 data points for XRP/USDT (30m)
eruda.js:2 Loading chart with 720 data points for XRP/USDT (1h)
eruda.js:2 Loading chart with 500 data points for XRP/USDT (4h)
eruda.js:2 Loading chart with 365 data points for XRP/USDT (1d)
eruda.js:2 Loading chart with 150 data points for XRP/USDT (3d)
eruda.js:2 Loading chart with 200 data points for XRP/USDT (1w)
eruda.js:2 Loading chart with 60 data points for XRP/USDT (1M)
eruda.js:2 [UltimateManager] Chart data preloading completed
eruda.js:2 [UltimateManager] System initialization complete - ALL timers synchronized to 240s
eruda.js:2 [System] Ultimate manager active - synchronized 4-minute intervals
eruda.js:2 ⚡ Starting immediate pair selection calculation for BTC/USDT
eruda.js:2 ✅ pair-selection calculation allowed - bypassing 4-minute restriction
eruda.js:2 ✅ Calculation allowed: pair-selection
eruda.js:2 ⚡ Starting calculation loop for 10 timeframes
eruda.js:2 ⚡ About to calculate 1m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1m)
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 [1m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1m] Preparing chart data with 1000 candles
eruda.js:2 [1m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1m] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1m: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 1 patterns for 1m timeframe
eruda.js:2 ⚡ Successfully calculated 1m: LONG
eruda.js:2 ⚡ About to calculate 5m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 5m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (5m)
eruda.js:2 [5m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [5m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [5m] Preparing chart data with 1000 candles
eruda.js:2 [5m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [5m] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 5m: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 3 patterns for 5m timeframe
eruda.js:2 ⚡ Successfully calculated 5m: LONG
eruda.js:2 ⚡ About to calculate 15m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 15m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (15m)
eruda.js:2 [15m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [15m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [15m] Preparing chart data with 800 candles
eruda.js:2 [15m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [15m] Consolidated signal result: SHORT (70%)
eruda.js:2 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=SHORT, Confidence=70%
eruda.js:2 [ConsolidatedEngine] 15m: Signal ready - Direction=SHORT, Confidence=70%
eruda.js:2 Generated 5 patterns for 15m timeframe
eruda.js:2 ⚡ Successfully calculated 15m: SHORT
eruda.js:2 ⚡ About to calculate 30m timeframe
eruda.js:2 Calculating signal for BTC/USDT on 30m timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (30m)
eruda.js:2 [30m] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [30m] Using live price: 109849.3831888727 for calculation
eruda.js:2 [30m] Preparing chart data with 800 candles
eruda.js:2 [30m] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [30m] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 30m: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 3 patterns for 30m timeframe
eruda.js:2 ⚡ Successfully calculated 30m: LONG
eruda.js:2 ⚡ About to calculate 1h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1h)
eruda.js:2 [1h] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1h] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1h] Preparing chart data with 720 candles
eruda.js:2 [1h] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1h] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1h: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 3 patterns for 1h timeframe
eruda.js:2 ⚡ Successfully calculated 1h: LONG
eruda.js:2 ⚡ About to calculate 4h timeframe
eruda.js:2 Calculating signal for BTC/USDT on 4h timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (4h)
eruda.js:2 [4h] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [4h] Using live price: 109849.3831888727 for calculation
eruda.js:2 [4h] Preparing chart data with 500 candles
eruda.js:2 [4h] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [4h] Consolidated signal result: LONG (80%)
eruda.js:2 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=LONG, Confidence=80%
eruda.js:2 [ConsolidatedEngine] 4h: Signal ready - Direction=LONG, Confidence=80%
eruda.js:2 Generated 5 patterns for 4h timeframe
eruda.js:2 ⚡ Successfully calculated 4h: LONG
eruda.js:2 ⚡ About to calculate 1d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1d)
eruda.js:2 [1d] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1d] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1d] Preparing chart data with 365 candles
eruda.js:2 [1d] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1d] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1d: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 6 patterns for 1d timeframe
eruda.js:2 ⚡ Successfully calculated 1d: LONG
eruda.js:2 ⚡ About to calculate 3d timeframe
eruda.js:2 Calculating signal for BTC/USDT on 3d timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (3d)
eruda.js:2 [3d] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [3d] Using live price: 109849.3831888727 for calculation
eruda.js:2 [3d] Preparing chart data with 150 candles
eruda.js:2 [3d] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [3d] Consolidated signal result: LONG (90%)
eruda.js:2 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=90%
eruda.js:2 Generated 7 patterns for 3d timeframe
eruda.js:2 ⚡ Successfully calculated 3d: LONG
eruda.js:2 ⚡ About to calculate 1w timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1w timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1w)
eruda.js:2 [1w] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1w] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1w] Preparing chart data with 200 candles
eruda.js:2 [1w] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1w] Consolidated signal result: SHORT (90%)
eruda.js:2 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=SHORT, Confidence=90%
eruda.js:2 [ConsolidatedEngine] 1w: Signal ready - Direction=SHORT, Confidence=90%
eruda.js:2 Generated 9 patterns for 1w timeframe
eruda.js:2 ⚡ Successfully calculated 1w: SHORT
eruda.js:2 ⚡ About to calculate 1M timeframe
eruda.js:2 Calculating signal for BTC/USDT on 1M timeframe
eruda.js:2 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
eruda.js:2 Starting signal calculation for BTC/USDT (1M)
eruda.js:2 [1M] Fresh price fetched for BTC/USDT: 109849.3831888727
eruda.js:2 [1M] Using live price: 109849.3831888727 for calculation
eruda.js:2 [1M] Preparing chart data with 60 candles
eruda.js:2 [1M] Using consolidated calculation engine with live price 109849.3831888727
eruda.js:2 [1M] Consolidated signal result: SHORT (70%)
eruda.js:2 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=SHORT, Confidence=70%
eruda.js:2 [ConsolidatedEngine] 1M: Signal ready - Direction=SHORT, Confidence=70%
eruda.js:2 Generated 6 patterns for 1M timeframe
eruda.js:2 ⚡ Successfully calculated 1M: SHORT
eruda.js:2 ⚡ Calculation loop completed
eruda.js:2 🔧 Raw signals before alignment: (10) ['1m: LONG', '5m: LONG', '15m: SHORT', '30m: LONG', '1h: LONG', '4h: LONG', '1d: LONG', '3d: LONG', '1w: SHORT', '1M: SHORT']
eruda.js:2 🔧 Aligned signals after processing: (10) ['1m: LONG', '5m: LONG', '15m: SHORT', '30m: LONG', '1h: LONG', '4h: LONG', '1d: LONG', '3d: LONG', '1w: SHORT', '1M: SHORT']
eruda.js:2 📊 UPDATING UI STATE with 10 timeframe signals
eruda.js:2 📊 Signal data being set: (10) ['1m: LONG', '5m: LONG', '15m: SHORT', '30m: LONG', '1h: LONG', '4h: LONG', '1d: LONG', '3d: LONG', '1w: SHORT', '1M: SHORT']
eruda.js:2 📊 About to call setSignals with: (10) ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '3d', '1w', '1M']
eruda.js:2 📊 Sample signal structure: (18) ['symbol', 'timeframe', 'direction', 'confidence', 'entryPrice', 'stopLoss', 'takeProfit', 'timestamp', 'successProbability', 'indicators', 'patternFormations', 'supportResistance', 'environment', 'recommendedLeverage', 'riskReward', 'marketStructure', 'volumeProfile', 'macroInsights']
eruda.js:2 📊 Sample 1d signal: {symbol: 'BTC/USDT', timeframe: '1d', direction: 'LONG', confidence: 90, entryPrice: 109849.3831888727, …}
eruda.js:2 📊 setSignals call completed successfully
eruda.js:2 Recording predictions using fresh fetched price: 109849.3831888727
eruda.js:2 [HeatMap] Received synchronized calculation event - updating heatmap
eruda.js:2 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
eruda.js:2 [HeatMap] Fetching synchronized heatmap data for 4h
eruda.js:2 📈 Prediction recorded: BTC/USDT 1m LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 1m LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 5m LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 5m LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 15m SHORT @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 113144.86, Take Profit: 103258.42
eruda.js:2 Recorded prediction: 15m SHORT @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 30m LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 30m LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 1h LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 106553.90, Take Profit: 116440.35
eruda.js:2 Recorded prediction: 1h LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 4h LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 104356.91, Take Profit: 120834.32
eruda.js:2 Recorded prediction: 4h LONG @ 109849.3831888727
eruda.js:2 🔄 Signals updated, syncing timer with actual calculation time
eruda.js:2 📈 Prediction recorded: BTC/USDT 1d LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 103258.42, Take Profit: 123031.31
eruda.js:2 Recorded prediction: 1d LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 3d LONG @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 101061.43, Take Profit: 127425.28
eruda.js:2 Recorded prediction: 3d LONG @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 1w SHORT @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 120834.32, Take Profit: 87879.51
eruda.js:2 Recorded prediction: 1w SHORT @ 109849.3831888727
eruda.js:2 📈 Prediction recorded: BTC/USDT 1M SHORT @ 109849.3831888727
eruda.js:2 🎯 Stop Loss: 126326.79, Take Profit: 76894.57
eruda.js:2 Recorded prediction: 1M SHORT @ 109849.3831888727
eruda.js:2 Found 10 valid signals for recommendation for BTC/USDT
eruda.js:2 Updating trade recommendation for 4h timeframe
eruda.js:2 Calculation process complete for BTC/USDT - 10 signals generated
eruda.js:2 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
eruda.js:2 🛑 Calculation blocked: 237s until next 4-minute interval
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [UltimateManager] Next fetch in 220s
eruda.js:2 [UltimateManager] Next fetch in 200s
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109849.3831888727
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [UltimateManager] Next fetch in 180s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [UltimateManager] Next fetch in 160s
eruda.js:2 [UltimateManager] Next fetch in 140s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109780.11098329672
eruda.js:2 [PriceOverview] Centralized price update for BTC/USDT: $109780.11098329672
eruda.js:2 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109780.11098329672
eruda.js:2 [UltimateManager] Next fetch in 120s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [UltimateManager] Next fetch in 100s
eruda.js:2 [UltimateManager] Next fetch in 80s
eruda.js:2 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
eruda.js:2 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
eruda.js:2 [CentralizedPriceManager] Updated price for BTC/USDT: $109780.11098329672
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/__replco/workspace_iframe.html?initialPath=%2F&id=%3Arddi%3A:32 Unrecognized feature: 'ambient-light-sensor'.
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/__replco/workspace_iframe.html?initialPath=%2F&id=%3Arddi%3A:32 Unrecognized feature: 'battery'.
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/__replco/workspace_iframe.html?initialPath=%2F&id=%3Arddi%3A:32 Unrecognized feature: 'execution-while-not-rendered'.
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/__replco/workspace_iframe.html?initialPath=%2F&id=%3Arddi%3A:32 Unrecognized feature: 'execution-while-out-of-viewport'.
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/__replco/workspace_iframe.html?initialPath=%2F&id=%3Arddi%3A:32 Unrecognized feature: 'layout-animations'.
7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/__replco/workspace_iframe.html?initialPath=%2F&id=%3Arddi%3A:32 Unrecognized feature: 'legacy-image-formats'.
workspace_iframe.html:32 Unrecognized feature: 'navigation-override'.
workspace_iframe.html:32 Unrecognized feature: 'oversized-images'.
workspace_iframe.html:32 Unrecognized feature: 'publickey-credentials'.
workspace_iframe.html:32 Unrecognized feature: 'speaker-selection'.
workspace_iframe.html:32 Unrecognized feature: 'unoptimized-images'.
workspace_iframe.html:32 Unrecognized feature: 'unsized-media'.
workspace_iframe.html:32 Allow attribute will take precedence over 'allowfullscreen'.
workspace_iframe.html:32 Allow attribute will take precedence over 'allowpaymentrequest'.
client:536 WebSocket connection to 'wss://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/?token=sTNExqLoIWdX' failed: 
t @ Network.js:227
setupWebSocket @ client:536
(anonymous) @ client:531
Network.js:227 Uncaught (in promise) SyntaxError: Failed to construct 'WebSocket': The URL 'wss://localhost:undefined/?token=sTNExqLoIWdX' is invalid.
    at new t (Network.js:227:18)
    at setupWebSocket (client:536:19)
    at fallback (client:509:16)
    at WebSocket.<anonymous> (client:555:7)
t @ Network.js:227
setupWebSocket @ client:536
fallback @ client:509
(anonymous) @ client:555
Console.js:61 [CentralizedPriceManager] Initializing with 4-minute intervals
Console.js:61 Technical indicators module initialized
Console.js:61 🎯 Live Accuracy Tracker initialized - tracking real market outcomes
Console.js:61 🧠 Adaptive Learning Engine initialized - starting feedback loop optimization
Console.js:61 [UltimateManager] Starting FINAL system initialization
Console.js:61 Technical indicators module initialized
Console.js:61 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
Console.js:61 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
Console.js:61 [CentralizedPriceManager] Using existing fetch for BTC/USDT
Console.js:61 [CentralizedPriceManager] New subscriber for BTC/USDT
Console.js:61 [CentralizedPriceManager] Using existing fetch for BTC/USDT
Console.js:61 [CentralizedPriceManager] Starting 4-minute fetch interval
Console.js:61 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
Console.js:61 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
Console.js:61 Establishing data connection...
Console.js:61 Subscribed to symbols: BTC/USDT
Console.js:61 Loading chart data for BTC/USDT (1m)
Console.js:61 Loading chart data for BTC/USDT (5m)
Console.js:61 Loading chart data for BTC/USDT (15m)
Console.js:61 Loading chart data for BTC/USDT (30m)
Console.js:61 Loading chart data for BTC/USDT (1h)
Console.js:61 Loading chart data for BTC/USDT (4h)
Console.js:61 Loading chart data for BTC/USDT (1d)
Console.js:61 Loading chart data for BTC/USDT (3d)
Console.js:61 Loading chart data for BTC/USDT (1w)
Console.js:61 Loading chart data for BTC/USDT (1M)
Console.js:61 [CentralizedPriceManager] New subscriber for BTC/USDT
Console.js:61 [CentralizedPriceManager] Using existing fetch for BTC/USDT
Console.js:61 🧠 Initializing continuous learning feedback loop for BTC/USDT
Console.js:61 🧠 Starting continuous learning for BTC/USDT
Console.js:61 [HeatMap] Fetching synchronized heatmap data for 4h
Console.js:61 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
Console.js:61 Establishing data connection...
Console.js:61 Subscribed to symbols: BTC/USDT
Console.js:61 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
Console.js:61 [CentralizedPriceManager] Using existing fetch for BTC/USDT
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 [CentralizedPriceManager] Updated price for BTC/USDT: $109762.22523862925
Console.js:61 Establishing data connection...
Console.js:61 [UltimateManager] Triggering IMMEDIATE calculation to eliminate 2-cycle delay
Console.js:61 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
Console.js:61 Establishing data connection...
Console.js:61 Subscribed to symbols: BTC/USDT
Console.js:61 [PriceOverview] Centralized price update for BTC/USDT: $109762.22523862925
Console.js:61 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109762.22523862925
Console.js:61 Establishing data connection...
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Fetching data for symbol: BTC/USDT, encoded as: BTC%2FUSDT
Console.js:61 Establishing data connection...
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Data connection established
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Establishing data connection...
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Loading chart with 500 data points for BTC/USDT (4h)
Console.js:61 Loading chart with 1000 data points for BTC/USDT (5m)
Console.js:61 Data connection established
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Loading chart with 1000 data points for BTC/USDT (1m)
Console.js:61 Loading chart with 800 data points for BTC/USDT (15m)
Console.js:61 Loading chart with 720 data points for BTC/USDT (1h)
Console.js:61 Loading chart with 800 data points for BTC/USDT (30m)
Console.js:61 Loading chart with 365 data points for BTC/USDT (1d)
Console.js:61 Loading chart with 150 data points for BTC/USDT (3d)
Console.js:61 Loading chart with 60 data points for BTC/USDT (1M)
Console.js:61 Loading chart with 200 data points for BTC/USDT (1w)
Console.js:61 All timeframe data loaded for BTC/USDT
Console.js:61 Data connection established
Console.js:61 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (initial)
Console.js:61 Data connection established
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Data connection established
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Data connection established
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 [UltimateManager] Fallback price synchronized: BTC/USDT = $109762.22523862925
Console.js:61 [SignalDashboard] Immediate calculation triggered by UltimateManager
Console.js:61 Data connection established
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 ✅ 4-minute calculation allowed (trigger: unknown)
Console.js:61 ✅ Calculation allowed: unknown
Console.js:61 ⚡ Starting calculation loop for 10 timeframes
Console.js:61 ⚡ About to calculate 1m timeframe
Console.js:61 Calculating signal for BTC/USDT on 1m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1m)
Console.js:61 🛑 Calculation blocked: 240s until next 4-minute interval
Console.js:61 [1m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1m] Using live price: 109762.22523862925 for calculation
Console.js:61 [1m] Preparing chart data with 1000 candles
Console.js:61 [1m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1m] Consolidated signal result: SHORT (95%)
Console.js:61 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
Console.js:61 [ConsolidatedEngine] 1m: Signal ready - Direction=SHORT, Confidence=95%
Console.js:61 Generated 3 patterns for 1m timeframe
Console.js:61 ⚡ Successfully calculated 1m: SHORT
Console.js:61 ⚡ About to calculate 5m timeframe
Console.js:61 Calculating signal for BTC/USDT on 5m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
Console.js:61 Starting signal calculation for BTC/USDT (5m)
Console.js:61 [UltimateManager] Fallback price synchronized: ETH/USDT = $2768.9525115713236
Console.js:61 [5m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [5m] Using live price: 109762.22523862925 for calculation
Console.js:61 [5m] Preparing chart data with 1000 candles
Console.js:61 [5m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [5m] Consolidated signal result: LONG (90%)
Console.js:61 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=LONG, Confidence=90%
Console.js:61 [ConsolidatedEngine] 5m: Signal ready - Direction=LONG, Confidence=90%
Console.js:61 Generated 3 patterns for 5m timeframe
Console.js:61 ⚡ Successfully calculated 5m: LONG
Console.js:61 ⚡ About to calculate 15m timeframe
Console.js:61 Calculating signal for BTC/USDT on 15m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
Console.js:61 Starting signal calculation for BTC/USDT (15m)
Console.js:61 [15m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [15m] Using live price: 109762.22523862925 for calculation
Console.js:61 [15m] Preparing chart data with 800 candles
Console.js:61 [15m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [15m] Consolidated signal result: LONG (80%)
Console.js:61 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=LONG, Confidence=80%
Console.js:61 [ConsolidatedEngine] 15m: Signal ready - Direction=LONG, Confidence=80%
Console.js:61 Generated 3 patterns for 15m timeframe
Console.js:61 ⚡ Successfully calculated 15m: LONG
Console.js:61 [UltimateManager] Fallback price synchronized: BNB/USDT = $669.3341749974775
Console.js:61 ⚡ About to calculate 30m timeframe
Console.js:61 Calculating signal for BTC/USDT on 30m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
Console.js:61 Starting signal calculation for BTC/USDT (30m)
Console.js:61 [30m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [30m] Using live price: 109762.22523862925 for calculation
Console.js:61 [30m] Preparing chart data with 800 candles
Console.js:61 [30m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [30m] Consolidated signal result: NEUTRAL (50%)
Console.js:61 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=NEUTRAL, Confidence=50%
Console.js:61 [ConsolidatedEngine] 30m: Signal ready - Direction=NEUTRAL, Confidence=50%
Console.js:61 Generated 5 patterns for 30m timeframe
Console.js:61 ⚡ Successfully calculated 30m: NEUTRAL
Console.js:61 [UltimateManager] Fallback price synchronized: XRP/USDT = $2.2974691675267076
Console.js:61 ⚡ About to calculate 1h timeframe
Console.js:61 Calculating signal for BTC/USDT on 1h timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1h)
Console.js:61 [1h] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1h] Using live price: 109762.22523862925 for calculation
Console.js:61 [1h] Preparing chart data with 720 candles
Console.js:61 [1h] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1h] Consolidated signal result: SHORT (95%)
Console.js:61 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
Console.js:61 [ConsolidatedEngine] 1h: Signal ready - Direction=SHORT, Confidence=95%
Console.js:61 Generated 3 patterns for 1h timeframe
Console.js:61 ⚡ Successfully calculated 1h: SHORT
Console.js:61 ⚡ About to calculate 4h timeframe
Console.js:61 Calculating signal for BTC/USDT on 4h timeframe
Console.js:61 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
Console.js:61 Starting signal calculation for BTC/USDT (4h)
Console.js:61 [4h] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [4h] Using live price: 109762.22523862925 for calculation
Console.js:61 [4h] Preparing chart data with 500 candles
Console.js:61 [4h] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [4h] Consolidated signal result: SHORT (95%)
Console.js:61 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
Console.js:61 [ConsolidatedEngine] 4h: Signal ready - Direction=SHORT, Confidence=95%
Console.js:61 Generated 8 patterns for 4h timeframe
Console.js:61 ⚡ Successfully calculated 4h: SHORT
Console.js:61 [UltimateManager] Fallback price synchronized: SOL/USDT = $163.47947748536694
Console.js:61 ⚡ About to calculate 1d timeframe
Console.js:61 Calculating signal for BTC/USDT on 1d timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1d)
Console.js:61 [1d] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1d] Using live price: 109762.22523862925 for calculation
Console.js:61 [1d] Preparing chart data with 365 candles
Console.js:61 [1d] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1d] Consolidated signal result: SHORT (80%)
Console.js:61 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=SHORT, Confidence=80%
Console.js:61 [ConsolidatedEngine] 1d: Signal ready - Direction=SHORT, Confidence=80%
Console.js:61 Generated 7 patterns for 1d timeframe
Console.js:61 ⚡ Successfully calculated 1d: SHORT
Console.js:61 [UltimateManager] Fallback price synchronized: USDC/USD = $0.9996465136378487
Console.js:61 ⚡ About to calculate 3d timeframe
Console.js:61 Calculating signal for BTC/USDT on 3d timeframe
Console.js:61 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
Console.js:61 Starting signal calculation for BTC/USDT (3d)
Console.js:61 [3d] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [3d] Using live price: 109762.22523862925 for calculation
Console.js:61 [3d] Preparing chart data with 150 candles
Console.js:61 [3d] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [3d] Consolidated signal result: LONG (90%)
Console.js:61 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=90%
Console.js:61 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=90%
Console.js:61 Generated 7 patterns for 3d timeframe
Console.js:61 ⚡ Successfully calculated 3d: LONG
Console.js:61 ⚡ About to calculate 1w timeframe
Console.js:61 Calculating signal for BTC/USDT on 1w timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1w)
Console.js:61 [1w] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1w] Using live price: 109762.22523862925 for calculation
Console.js:61 [1w] Preparing chart data with 200 candles
Console.js:61 [1w] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1w] Consolidated signal result: NEUTRAL (50%)
Console.js:61 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=NEUTRAL, Confidence=50%
Console.js:61 [ConsolidatedEngine] 1w: Signal ready - Direction=NEUTRAL, Confidence=50%
Console.js:61 Generated 6 patterns for 1w timeframe
Console.js:61 ⚡ Successfully calculated 1w: NEUTRAL
Console.js:61 ⚡ About to calculate 1M timeframe
Console.js:61 Calculating signal for BTC/USDT on 1M timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1M)
Console.js:61 [1M] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1M] Using live price: 109762.22523862925 for calculation
Console.js:61 [1M] Preparing chart data with 60 candles
Console.js:61 [1M] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1M] Consolidated signal result: NEUTRAL (50%)
Console.js:61 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=NEUTRAL, Confidence=50%
Console.js:61 [ConsolidatedEngine] 1M: Signal ready - Direction=NEUTRAL, Confidence=50%
Console.js:61 Generated 5 patterns for 1M timeframe
Console.js:61 ⚡ Successfully calculated 1M: NEUTRAL
Console.js:61 ⚡ Calculation loop completed
Console.js:61 🔧 Raw signals before alignment: (10) ['1m: SHORT', '5m: LONG', '15m: LONG', '30m: NEUTRAL', '1h: SHORT', '4h: SHORT', '1d: SHORT', '3d: LONG', '1w: NEUTRAL', '1M: NEUTRAL']
Console.js:61 🔧 Aligned signals after processing: (10) ['1m: SHORT', '5m: LONG', '15m: LONG', '30m: NEUTRAL', '1h: SHORT', '4h: SHORT', '1d: SHORT', '3d: LONG', '1w: NEUTRAL', '1M: NEUTRAL']
Console.js:61 📊 UPDATING UI STATE with 10 timeframe signals
Console.js:61 📊 Signal data being set: (10) ['1m: SHORT', '5m: LONG', '15m: LONG', '30m: NEUTRAL', '1h: SHORT', '4h: SHORT', '1d: SHORT', '3d: LONG', '1w: NEUTRAL', '1M: NEUTRAL']
Console.js:61 📊 About to call setSignals with: (10) ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '3d', '1w', '1M']
Console.js:61 📊 Sample signal structure: (18) ['symbol', 'timeframe', 'direction', 'confidence', 'entryPrice', 'stopLoss', 'takeProfit', 'timestamp', 'successProbability', 'indicators', 'patternFormations', 'supportResistance', 'environment', 'recommendedLeverage', 'riskReward', 'marketStructure', 'volumeProfile', 'macroInsights']
Console.js:61 📊 Sample 1d signal: {symbol: 'BTC/USDT', timeframe: '1d', direction: 'SHORT', confidence: 79.25, entryPrice: 109762.22523862925, …}
Console.js:61 📊 setSignals call completed successfully
Console.js:61 Recording predictions using fresh fetched price: 109762.22523862925
Console.js:61 [UltimateManager] Fallback price synchronized: ADA/USDT = $0.7087996114530352
Console.js:61 📈 Prediction recorded: BTC/USDT 1m SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 113055.09, Take Profit: 103176.49
Console.js:61 Recorded prediction: 1m SHORT @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 5m LONG @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 106469.36, Take Profit: 116347.96
Console.js:61 Recorded prediction: 5m LONG @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 15m LONG @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 106469.36, Take Profit: 116347.96
Console.js:61 Recorded prediction: 15m LONG @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 1h SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 113055.09, Take Profit: 103176.49
Console.js:61 Recorded prediction: 1h SHORT @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 4h SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 115250.34, Take Profit: 98786.00
Console.js:61 Recorded prediction: 4h SHORT @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 1d SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 116347.96, Take Profit: 96590.76
Console.js:61 Recorded prediction: 1d SHORT @ 109762.22523862925
Console.js:61 🔄 Signals updated, syncing timer with actual calculation time
Console.js:61 📈 Prediction recorded: BTC/USDT 3d LONG @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 100981.25, Take Profit: 127324.18
Console.js:61 Recorded prediction: 3d LONG @ 109762.22523862925
Console.js:61 Found 10 valid signals for recommendation for BTC/USDT
Console.js:61 Updating trade recommendation for 4h timeframe
Console.js:61 No signal available for BTC/USDT on 4h
Console.js:61 Calculation process complete for BTC/USDT - 10 signals generated
Console.js:61 [SignalDashboard] Data ready for BTC/USDT but calculation blocked by 4-minute timer (238s remaining)
Console.js:61 [UltimateManager] Fallback price synchronized: AVAX/USDT = $22.20894006661358
Console.js:61 [UltimateManager] Fallback price synchronized: DOGE/USDT = $0.1944052370646515
Console.js:61 [UltimateManager] Fallback price synchronized: TRX/USDT = $0.29087485261581164
Console.js:61 [UltimateManager] Fallback price synchronized: TON/USDT = $3.3171379034603934
Console.js:61 [UltimateManager] Fallback price synchronized: LINK/USDT = $15.269140596299632
Console.js:61 [UltimateManager] Fallback price synchronized: MATIC/USDT = $0.64
Console.js:61 [UltimateManager] Fallback price synchronized: SHIB/USDT = $0.000013205174687859528
Console.js:61 [UltimateManager] Fallback price synchronized: LTC/USDT = $92.3986644868721
Console.js:61 [UltimateManager] Fallback price synchronized: BCH/USDT = $441.5837404558892
Console.js:61 [UltimateManager] Fallback price synchronized: UNI/USDT = $8.356690751914917
Console.js:61 [UltimateManager] Fallback price synchronized: DOT/USDT = $4.259674969343801
Console.js:61 [UltimateManager] Fallback price synchronized: XLM/USDT = $0.28078465295973537
Console.js:61 [UltimateManager] Fallback price synchronized: ATOM/USDT = $4.5952059646588745
Console.js:61 [UltimateManager] Fallback price synchronized: XMR/USDT = $340.96529909626787
Console.js:61 [UltimateManager] Fallback price synchronized: ETC/USDT = $18.320640810068372
Console.js:61 [UltimateManager] Fallback price synchronized: HBAR/USDT = $0.18009222543608294
Console.js:61 [UltimateManager] Fallback price synchronized: FIL/USDT = $2.7116541691954965
Console.js:61 [UltimateManager] Fallback price synchronized: ICP/USDT = $6.097738794593528
Console.js:61 [UltimateManager] Fallback price synchronized: VET/USDT = $0.025931319560344578
Console.js:61 [UltimateManager] Fallback price synchronized: APT/USDT = $5.086093185917689
Console.js:61 [UltimateManager] Fallback price synchronized: NEAR/USDT = $2.626354811554834
Console.js:61 [UltimateManager] Fallback price synchronized: AAVE/USDT = $308.0979247872026
Console.js:61 [UltimateManager] Fallback price synchronized: ARB/USDT = $0.40469779171552916
Console.js:61 [UltimateManager] Fallback price synchronized: OP/USDT = $0.7057120186703338
Console.js:61 [UltimateManager] Fallback price synchronized: MKR/USDT = $2120.162443344104
Console.js:61 [UltimateManager] Fallback price synchronized: GRT/USDT = $0.10093606096058597
Console.js:61 [UltimateManager] Fallback price synchronized: STX/USDT = $0.7076973174756019
Console.js:61 [UltimateManager] Fallback price synchronized: INJ/USDT = $13.87828396538006
Console.js:61 [UltimateManager] Fallback price synchronized: ALGO/USDT = $0.20587945340107563
Console.js:61 [UltimateManager] Fallback price synchronized: LDO/USDT = $0.953102079845971
Console.js:61 [UltimateManager] Fallback price synchronized: THETA/USDT = $50
Console.js:61 [UltimateManager] Fallback price synchronized: SUI/USDT = $25
Console.js:61 [UltimateManager] Fallback price synchronized: RUNE/USDT = $3.85
Console.js:61 [UltimateManager] Fallback price synchronized: MANA/USDT = $20
Console.js:61 [UltimateManager] Fallback price synchronized: SAND/USDT = $20
Console.js:61 [UltimateManager] Fallback price synchronized: FET/USDT = $20
Console.js:61 [UltimateManager] Fallback price synchronized: RNDR/USDT = $20
Console.js:61 [UltimateManager] Fallback price synchronized: KAVA/USDT = $25
Console.js:61 [UltimateManager] Fallback price synchronized: MINA/USDT = $25
Console.js:61 [UltimateManager] Fallback price synchronized: FLOW/USDT = $0.52
Console.js:61 [UltimateManager] Fallback price synchronized: XTZ/USDT = $50
Console.js:61 [UltimateManager] Fallback price synchronized: BLUR/USDT = $20
Console.js:61 [UltimateManager] Fallback price synchronized: QNT/USDT = $50
Console.js:61 [UltimateManager] Multi-pair fetch: 50 symbols updated
Console.js:61 [UltimateManager] Preloading chart data for immediate analysis
Console.js:61 Loading chart with 1000 data points for BTC/USDT (1m)
Console.js:61 Loading chart with 1000 data points for BTC/USDT (5m)
Console.js:61 Loading chart with 800 data points for BTC/USDT (15m)
Console.js:61 Loading chart with 800 data points for BTC/USDT (30m)
Console.js:61 Loading chart with 720 data points for BTC/USDT (1h)
Console.js:61 Loading chart with 500 data points for BTC/USDT (4h)
Console.js:61 Loading chart with 365 data points for BTC/USDT (1d)
Console.js:61 Loading chart with 150 data points for BTC/USDT (3d)
Console.js:61 Loading chart with 200 data points for BTC/USDT (1w)
Console.js:61 Loading chart with 60 data points for BTC/USDT (1M)
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Loading chart with 500 data points for ETH/USDT (4h)
Console.js:61 Loading chart with 1000 data points for ETH/USDT (1m)
Console.js:61 Loading chart with 800 data points for ETH/USDT (30m)
Console.js:61 Loading chart with 1000 data points for ETH/USDT (5m)
Console.js:61 Loading chart with 800 data points for ETH/USDT (15m)
Console.js:61 Loading chart with 720 data points for ETH/USDT (1h)
Console.js:61 Loading chart with 365 data points for ETH/USDT (1d)
Console.js:61 Loading chart with 150 data points for ETH/USDT (3d)
Console.js:61 Loading chart with 200 data points for ETH/USDT (1w)
Console.js:61 Loading chart with 60 data points for ETH/USDT (1M)
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Loading chart with 800 data points for BNB/USDT (15m)
Console.js:61 Loading chart with 800 data points for BNB/USDT (30m)
Console.js:61 Loading chart with 1000 data points for BNB/USDT (5m)
Console.js:61 Loading chart with 1000 data points for BNB/USDT (1m)
Console.js:61 Loading chart with 720 data points for BNB/USDT (1h)
Console.js:61 Loading chart with 500 data points for BNB/USDT (4h)
Console.js:61 Loading chart with 365 data points for BNB/USDT (1d)
Console.js:61 Loading chart with 150 data points for BNB/USDT (3d)
Console.js:61 Loading chart with 60 data points for BNB/USDT (1M)
Console.js:61 Loading chart with 200 data points for BNB/USDT (1w)
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Loading chart with 1000 data points for SOL/USDT (5m)
Console.js:61 Loading chart with 800 data points for SOL/USDT (15m)
Console.js:61 Loading chart with 800 data points for SOL/USDT (30m)
Console.js:61 Loading chart with 720 data points for SOL/USDT (1h)
Console.js:61 Loading chart with 1000 data points for SOL/USDT (1m)
Console.js:61 Loading chart with 500 data points for SOL/USDT (4h)
Console.js:61 Loading chart with 365 data points for SOL/USDT (1d)
Console.js:61 Loading chart with 150 data points for SOL/USDT (3d)
Console.js:61 Loading chart with 200 data points for SOL/USDT (1w)
Console.js:61 Loading chart with 60 data points for SOL/USDT (1M)
Console.js:61 Subscribed to symbols: BTC/USDT, ETH/USDT, BNB/USDT, XRP/USDT, SOL/USDT, USDC/USD, ADA/USDT, AVAX/USDT, DOGE/USDT, TRX/USDT, TON/USDT, LINK/USDT, MATIC/USDT, SHIB/USDT, LTC/USDT, BCH/USDT, UNI/USDT, DOT/USDT, XLM/USDT, ATOM/USDT, XMR/USDT, ETC/USDT, HBAR/USDT, FIL/USDT, ICP/USDT, VET/USDT, APT/USDT, NEAR/USDT, AAVE/USDT, ARB/USDT, OP/USDT, MKR/USDT, GRT/USDT, STX/USDT, INJ/USDT, ALGO/USDT, LDO/USDT, THETA/USDT, SUI/USDT, RUNE/USDT, MANA/USDT, SAND/USDT, FET/USDT, RNDR/USDT, KAVA/USDT, MINA/USDT, FLOW/USDT, XTZ/USDT, BLUR/USDT, QNT/USDT
Console.js:61 Loading chart with 1000 data points for XRP/USDT (1m)
Console.js:61 Loading chart with 1000 data points for XRP/USDT (5m)
Console.js:61 Loading chart with 800 data points for XRP/USDT (30m)
Console.js:61 Loading chart with 800 data points for XRP/USDT (15m)
Console.js:61 Loading chart with 720 data points for XRP/USDT (1h)
Console.js:61 Loading chart with 500 data points for XRP/USDT (4h)
Console.js:61 Loading chart with 365 data points for XRP/USDT (1d)
Console.js:61 Loading chart with 200 data points for XRP/USDT (1w)
Console.js:61 Loading chart with 150 data points for XRP/USDT (3d)
Console.js:61 Loading chart with 60 data points for XRP/USDT (1M)
Console.js:61 [UltimateManager] Chart data preloading completed
Console.js:61 [UltimateManager] System initialization complete - ALL timers synchronized to 240s
Console.js:61 [System] Ultimate manager active - synchronized 4-minute intervals
Console.js:61 ⚡ Starting immediate pair selection calculation for BTC/USDT
Console.js:61 ✅ pair-selection calculation allowed - bypassing 4-minute restriction
Console.js:61 ✅ Calculation allowed: pair-selection
Console.js:61 ⚡ Starting calculation loop for 10 timeframes
Console.js:61 ⚡ About to calculate 1m timeframe
Console.js:61 Calculating signal for BTC/USDT on 1m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1m timeframe has 1000 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1m)
Console.js:61 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
Console.js:61 [1m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1m] Using live price: 109762.22523862925 for calculation
Console.js:61 [1m] Preparing chart data with 1000 candles
Console.js:61 [1m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1m] Consolidated signal result: SHORT (95%)
Console.js:61 [ConsolidatedEngine] 1m: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
Console.js:61 [ConsolidatedEngine] 1m: Signal ready - Direction=SHORT, Confidence=95%
Console.js:61 Generated 1 patterns for 1m timeframe
Console.js:61 ⚡ Successfully calculated 1m: SHORT
Console.js:61 ⚡ About to calculate 5m timeframe
Console.js:61 Calculating signal for BTC/USDT on 5m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 5m timeframe has 1000 data points.
Console.js:61 Starting signal calculation for BTC/USDT (5m)
Console.js:61 [5m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [5m] Using live price: 109762.22523862925 for calculation
Console.js:61 [5m] Preparing chart data with 1000 candles
Console.js:61 [5m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [5m] Consolidated signal result: LONG (90%)
Console.js:61 [ConsolidatedEngine] 5m: Market Regime: NORMAL, Direction=LONG, Confidence=90%
Console.js:61 [ConsolidatedEngine] 5m: Signal ready - Direction=LONG, Confidence=90%
Console.js:61 Generated 2 patterns for 5m timeframe
Console.js:61 ⚡ Successfully calculated 5m: LONG
Console.js:61 ⚡ About to calculate 15m timeframe
Console.js:61 Calculating signal for BTC/USDT on 15m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 15m timeframe has 800 data points.
Console.js:61 Starting signal calculation for BTC/USDT (15m)
Console.js:61 [15m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [15m] Using live price: 109762.22523862925 for calculation
Console.js:61 [15m] Preparing chart data with 800 candles
Console.js:61 [15m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [15m] Consolidated signal result: LONG (80%)
Console.js:61 [ConsolidatedEngine] 15m: Market Regime: NORMAL, Direction=LONG, Confidence=80%
Console.js:61 [ConsolidatedEngine] 15m: Signal ready - Direction=LONG, Confidence=80%
Console.js:61 Generated 3 patterns for 15m timeframe
Console.js:61 ⚡ Successfully calculated 15m: LONG
Console.js:61 ⚡ About to calculate 30m timeframe
Console.js:61 Calculating signal for BTC/USDT on 30m timeframe
Console.js:61 DATA CHECK: BTC/USDT on 30m timeframe has 800 data points.
Console.js:61 Starting signal calculation for BTC/USDT (30m)
Console.js:61 [30m] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [30m] Using live price: 109762.22523862925 for calculation
Console.js:61 [30m] Preparing chart data with 800 candles
Console.js:61 [30m] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [30m] Consolidated signal result: NEUTRAL (50%)
Console.js:61 [ConsolidatedEngine] 30m: Market Regime: NORMAL, Direction=NEUTRAL, Confidence=50%
Console.js:61 [ConsolidatedEngine] 30m: Signal ready - Direction=NEUTRAL, Confidence=50%
Console.js:61 Generated 5 patterns for 30m timeframe
Console.js:61 ⚡ Successfully calculated 30m: NEUTRAL
Console.js:61 ⚡ About to calculate 1h timeframe
Console.js:61 Calculating signal for BTC/USDT on 1h timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1h timeframe has 720 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1h)
Console.js:61 [1h] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1h] Using live price: 109762.22523862925 for calculation
Console.js:61 [1h] Preparing chart data with 720 candles
Console.js:61 [1h] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1h] Consolidated signal result: SHORT (95%)
Console.js:61 [ConsolidatedEngine] 1h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
Console.js:61 [ConsolidatedEngine] 1h: Signal ready - Direction=SHORT, Confidence=95%
Console.js:61 Generated 1 patterns for 1h timeframe
Console.js:61 ⚡ Successfully calculated 1h: SHORT
Console.js:61 ⚡ About to calculate 4h timeframe
Console.js:61 Calculating signal for BTC/USDT on 4h timeframe
Console.js:61 DATA CHECK: BTC/USDT on 4h timeframe has 500 data points.
Console.js:61 Starting signal calculation for BTC/USDT (4h)
Console.js:61 [4h] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [4h] Using live price: 109762.22523862925 for calculation
Console.js:61 [4h] Preparing chart data with 500 candles
Console.js:61 [4h] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [4h] Consolidated signal result: SHORT (95%)
Console.js:61 [ConsolidatedEngine] 4h: Market Regime: NORMAL, Direction=SHORT, Confidence=95%
Console.js:61 [ConsolidatedEngine] 4h: Signal ready - Direction=SHORT, Confidence=95%
Console.js:61 Generated 5 patterns for 4h timeframe
Console.js:61 ⚡ Successfully calculated 4h: SHORT
Console.js:61 ⚡ About to calculate 1d timeframe
Console.js:61 Calculating signal for BTC/USDT on 1d timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1d timeframe has 365 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1d)
Console.js:61 [1d] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1d] Using live price: 109762.22523862925 for calculation
Console.js:61 [1d] Preparing chart data with 365 candles
Console.js:61 [1d] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1d] Consolidated signal result: SHORT (80%)
Console.js:61 [ConsolidatedEngine] 1d: Market Regime: NORMAL, Direction=SHORT, Confidence=80%
Console.js:61 [ConsolidatedEngine] 1d: Signal ready - Direction=SHORT, Confidence=80%
Console.js:61 Generated 7 patterns for 1d timeframe
Console.js:61 ⚡ Successfully calculated 1d: SHORT
Console.js:61 ⚡ About to calculate 3d timeframe
Console.js:61 Calculating signal for BTC/USDT on 3d timeframe
Console.js:61 DATA CHECK: BTC/USDT on 3d timeframe has 150 data points.
Console.js:61 Starting signal calculation for BTC/USDT (3d)
Console.js:61 [3d] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [3d] Using live price: 109762.22523862925 for calculation
Console.js:61 [3d] Preparing chart data with 150 candles
Console.js:61 [3d] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [3d] Consolidated signal result: LONG (90%)
Console.js:61 [ConsolidatedEngine] 3d: Market Regime: NORMAL, Direction=LONG, Confidence=90%
Console.js:61 [ConsolidatedEngine] 3d: Signal ready - Direction=LONG, Confidence=90%
Console.js:61 Generated 4 patterns for 3d timeframe
Console.js:61 ⚡ Successfully calculated 3d: LONG
Console.js:61 ⚡ About to calculate 1w timeframe
Console.js:61 Calculating signal for BTC/USDT on 1w timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1w timeframe has 200 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1w)
Console.js:61 [1w] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1w] Using live price: 109762.22523862925 for calculation
Console.js:61 [1w] Preparing chart data with 200 candles
Console.js:61 [1w] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1w] Consolidated signal result: NEUTRAL (50%)
Console.js:61 [ConsolidatedEngine] 1w: Market Regime: NORMAL, Direction=NEUTRAL, Confidence=50%
Console.js:61 [ConsolidatedEngine] 1w: Signal ready - Direction=NEUTRAL, Confidence=50%
Console.js:61 Generated 7 patterns for 1w timeframe
Console.js:61 ⚡ Successfully calculated 1w: NEUTRAL
Console.js:61 ⚡ About to calculate 1M timeframe
Console.js:61 Calculating signal for BTC/USDT on 1M timeframe
Console.js:61 DATA CHECK: BTC/USDT on 1M timeframe has 60 data points.
Console.js:61 Starting signal calculation for BTC/USDT (1M)
Console.js:61 [1M] Fresh price fetched for BTC/USDT: 109762.22523862925
Console.js:61 [1M] Using live price: 109762.22523862925 for calculation
Console.js:61 [1M] Preparing chart data with 60 candles
Console.js:61 [1M] Using consolidated calculation engine with live price 109762.22523862925
Console.js:61 [1M] Consolidated signal result: NEUTRAL (50%)
Console.js:61 [ConsolidatedEngine] 1M: Market Regime: NORMAL, Direction=NEUTRAL, Confidence=50%
Console.js:61 [ConsolidatedEngine] 1M: Signal ready - Direction=NEUTRAL, Confidence=50%
Console.js:61 Generated 6 patterns for 1M timeframe
Console.js:61 ⚡ Successfully calculated 1M: NEUTRAL
Console.js:61 ⚡ Calculation loop completed
Console.js:61 🔧 Raw signals before alignment: (10) ['1m: SHORT', '5m: LONG', '15m: LONG', '30m: NEUTRAL', '1h: SHORT', '4h: SHORT', '1d: SHORT', '3d: LONG', '1w: NEUTRAL', '1M: NEUTRAL']
Console.js:61 🔧 Aligned signals after processing: (10) ['1m: SHORT', '5m: LONG', '15m: LONG', '30m: NEUTRAL', '1h: SHORT', '4h: SHORT', '1d: SHORT', '3d: LONG', '1w: NEUTRAL', '1M: NEUTRAL']
Console.js:61 📊 UPDATING UI STATE with 10 timeframe signals
Console.js:61 📊 Signal data being set: (10) ['1m: SHORT', '5m: LONG', '15m: LONG', '30m: NEUTRAL', '1h: SHORT', '4h: SHORT', '1d: SHORT', '3d: LONG', '1w: NEUTRAL', '1M: NEUTRAL']
Console.js:61 📊 About to call setSignals with: (10) ['1m', '5m', '15m', '30m', '1h', '4h', '1d', '3d', '1w', '1M']
Console.js:61 📊 Sample signal structure: (18) ['symbol', 'timeframe', 'direction', 'confidence', 'entryPrice', 'stopLoss', 'takeProfit', 'timestamp', 'successProbability', 'indicators', 'patternFormations', 'supportResistance', 'environment', 'recommendedLeverage', 'riskReward', 'marketStructure', 'volumeProfile', 'macroInsights']
Console.js:61 📊 Sample 1d signal: {symbol: 'BTC/USDT', timeframe: '1d', direction: 'SHORT', confidence: 79.25, entryPrice: 109762.22523862925, …}
Console.js:61 📊 setSignals call completed successfully
Console.js:61 [HeatMap] Received synchronized calculation event - updating heatmap
Console.js:61 [HeatMap] Syncing with ultimate system timer - refreshing heatmap data
Console.js:61 [HeatMap] Fetching synchronized heatmap data for 4h
Console.js:61 Recording predictions using fresh fetched price: 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 1m SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 113055.09, Take Profit: 103176.49
Console.js:61 Recorded prediction: 1m SHORT @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 5m LONG @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 106469.36, Take Profit: 116347.96
Console.js:61 Recorded prediction: 5m LONG @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 15m LONG @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 106469.36, Take Profit: 116347.96
Console.js:61 Recorded prediction: 15m LONG @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 1h SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 113055.09, Take Profit: 103176.49
Console.js:61 Recorded prediction: 1h SHORT @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 4h SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 115250.34, Take Profit: 98786.00
Console.js:61 Recorded prediction: 4h SHORT @ 109762.22523862925
Console.js:61 📈 Prediction recorded: BTC/USDT 1d SHORT @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 116347.96, Take Profit: 96590.76
Console.js:61 Recorded prediction: 1d SHORT @ 109762.22523862925
Console.js:61 🔄 Signals updated, syncing timer with actual calculation time
Console.js:61 📈 Prediction recorded: BTC/USDT 3d LONG @ 109762.22523862925
Console.js:61 🎯 Stop Loss: 100981.25, Take Profit: 127324.18
Console.js:61 Recorded prediction: 3d LONG @ 109762.22523862925
Console.js:61 Found 10 valid signals for recommendation for BTC/USDT
Console.js:61 Updating trade recommendation for 4h timeframe
Console.js:61 Calculation process complete for BTC/USDT - 10 signals generated
Console.js:61 [SignalDashboard] Data ready for BTC/USDT - triggering calculation (automated-system)
Console.js:61 🛑 Calculation blocked: 238s until next 4-minute interval
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 [UltimateManager] Next fetch in 220s
Console.js:61 [UltimateManager] Next fetch in 200s
Console.js:61 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
Console.js:61 [CentralizedPriceManager] Updated price for BTC/USDT: $109762.22523862925
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 [UltimateManager] Next fetch in 180s
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 [UltimateManager] Next fetch in 160s
Console.js:61 [UltimateManager] Next fetch in 140s
Console.js:61 [CentralizedPriceManager] No cached price for BTC/USDT, fetching immediately
Console.js:61 [CentralizedPriceManager] Updated price for BTC/USDT: $109813.33479873418
Console.js:61 [PriceOverview] Centralized price update for BTC/USDT: $109813.33479873418
Console.js:61 [AdvancedSignalDashboard] Centralized price update for BTC/USDT: $109813.33479873418
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:2245
setInterval
updateRefetchInterval_fn @ @tanstack_react-query.js?v=6bbb9425:2243
updateTimers_fn @ @tanstack_react-query.js?v=6bbb9425:2250
onQueryUpdate @ @tanstack_react-query.js?v=6bbb9425:2206
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:998
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:997
batch @ @tanstack_react-query.js?v=6bbb9425:583
dispatch_fn @ @tanstack_react-query.js?v=6bbb9425:996
setData @ @tanstack_react-query.js?v=6bbb9425:696
onSuccess @ @tanstack_react-query.js?v=6bbb9425:897
resolve @ @tanstack_react-query.js?v=6bbb9425:456
Promise.then
run @ @tanstack_react-query.js?v=6bbb9425:498
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
onSubscribe @ @tanstack_react-query.js?v=6bbb9425:1898
subscribe @ @tanstack_react-query.js?v=6bbb9425:24
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3022
subscribeToStore @ chunk-WERSD76P.js?v=6bbb9425:11984
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 [UltimateManager] Next fetch in 120s
Console.js:61 Tab change to 4h - using synchronized auto-calculated signal
Console.js:61 Updating trade recommendation for 4h timeframe
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=4h 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
setOptions @ @tanstack_react-query.js?v=6bbb9425:1955
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3032
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
(anonymous) @ chunk-WERSD76P.js?v=6bbb9425:19328
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 Tab change to 1d - using synchronized auto-calculated signal
Console.js:61 Updating trade recommendation for 1d timeframe
Console.js:61 Loading chart with 365 data points for BTC/USDT (1d)
Console.js:61 Tab change to 3d - using synchronized auto-calculated signal
Console.js:61 Updating trade recommendation for 3d timeframe
Console.js:61 Loading chart with 150 data points for BTC/USDT (3d)
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=3d 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
setOptions @ @tanstack_react-query.js?v=6bbb9425:1955
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3032
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 Tab change to 1w - using synchronized auto-calculated signal
Console.js:61 Updating trade recommendation for 1w timeframe
Console.js:61 Loading chart with 200 data points for BTC/USDT (1w)
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1w 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
setOptions @ @tanstack_react-query.js?v=6bbb9425:1955
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3032
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
Console.js:61 Tab change to 1M - using synchronized auto-calculated signal
Console.js:61 Updating trade recommendation for 1M timeframe
Console.js:61 Loading chart with 60 data points for BTC/USDT (1M)
UnifiedPerformancePanel.tsx:58 
            
            
           GET https://7293a9ec-d129-4675-bcfe-725541b83881-00-37eald1mfcffn.worf.replit.dev/api/technical-analysis/BTC%2FUSDT?timeframe=1M 500 (Internal Server Error)
window.fetch @ Network.js:219
queryFn @ UnifiedPerformancePanel.tsx:58
fetchFn @ @tanstack_react-query.js?v=6bbb9425:840
run @ @tanstack_react-query.js?v=6bbb9425:494
start @ @tanstack_react-query.js?v=6bbb9425:536
fetch @ @tanstack_react-query.js?v=6bbb9425:926
executeFetch_fn @ @tanstack_react-query.js?v=6bbb9425:2211
setOptions @ @tanstack_react-query.js?v=6bbb9425:1955
(anonymous) @ @tanstack_react-query.js?v=6bbb9425:3032
commitHookEffectListMount @ chunk-WERSD76P.js?v=6bbb9425:16915
commitPassiveMountOnFiber @ chunk-WERSD76P.js?v=6bbb9425:18156
commitPassiveMountEffects_complete @ chunk-WERSD76P.js?v=6bbb9425:18129
commitPassiveMountEffects_begin @ chunk-WERSD76P.js?v=6bbb9425:18119
commitPassiveMountEffects @ chunk-WERSD76P.js?v=6bbb9425:18109
flushPassiveEffectsImpl @ chunk-WERSD76P.js?v=6bbb9425:19490
flushPassiveEffects @ chunk-WERSD76P.js?v=6bbb9425:19447
performSyncWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18868
flushSyncCallbacks @ chunk-WERSD76P.js?v=6bbb9425:9119
commitRootImpl @ chunk-WERSD76P.js?v=6bbb9425:19432
commitRoot @ chunk-WERSD76P.js?v=6bbb9425:19277
finishConcurrentRender @ chunk-WERSD76P.js?v=6bbb9425:18805
performConcurrentWorkOnRoot @ chunk-WERSD76P.js?v=6bbb9425:18718
workLoop @ chunk-WERSD76P.js?v=6bbb9425:197
flushWork @ chunk-WERSD76P.js?v=6bbb9425:176
performWorkUntilDeadline @ chunk-WERSD76P.js?v=6bbb9425:384
